{
	"id": "ca1de20502b3e051fd3a610330fe7145",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"Tmons/InitDiamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\nimport {AppStorage} from \"./libs/LibAppStorage.sol\";\nimport {LibMeta} from \"../shared/libs/LibMeta.sol\";\nimport {LibDiamond} from \"../shared/libs/LibDiamond.sol\";\nimport {IDiamondCut} from \"../shared/interfaces/IDiamondCut.sol\";\nimport {IERC165} from \"../shared/interfaces/IERC165.sol\";\nimport {IDiamondLoupe} from \"../shared/interfaces/IDiamondLoupe.sol\";\nimport {IERC173} from \"../shared/interfaces/IERC173.sol\";\n//import {ILink} from \"./interfaces/ILink.sol\";\n\ncontract InitDiamond {\n    AppStorage internal s;\n\n    struct Args {\n        string name;\n        string symbol;\n\n    }\n\n    function init(Args memory _args) external {\n\n        LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage();\n\n        // adding ERC165 data\n        ds.supportedInterfaces[type(IERC165).interfaceId] = true;\n        ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true;\n        ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true;\n        ds.supportedInterfaces[type(IERC173).interfaceId] = true;\n        \n        s.name = _args.name;\n        s.symbol = _args.symbol;\n    }\n}"
			},
			"shared/interfaces/IERC173.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\n/// @title ERC-173 Contract Ownership Standard\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\n/* is ERC165 */\ninterface IERC173 {\n    /// @notice Get the address of the owner\n    /// @return owner_ The address of the owner.\n    function owner() external view returns (address owner_);\n\n    /// @notice Set the address of the new owner of the contract\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\n    /// @param _newOwner The address of the new owner of the contract\n    function transferOwnership(address _newOwner) external;\n}"
			},
			"shared/interfaces/IDiamondLoupe.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\n// A loupe is a small magnifying glass used to look at diamonds.\n// These functions look at diamonds\ninterface IDiamondLoupe {\n    /// These functions are expected to be called frequently\n    /// by tools.\n\n    struct Facet {\n        address facetAddress;\n        bytes4[] functionSelectors;\n    }\n\n    /// @notice Gets all facet addresses and their four byte function selectors.\n    /// @return facets_ Facet\n    function facets() external view returns (Facet[] memory facets_);\n\n    /// @notice Gets all the function selectors supported by a specific facet.\n    /// @param _facet The facet address.\n    /// @return facetFunctionSelectors_\n    function facetFunctionSelectors(address _facet) external view returns (bytes4[] memory facetFunctionSelectors_);\n\n    /// @notice Get all the facet addresses used by a diamond.\n    /// @return facetAddresses_\n    function facetAddresses() external view returns (address[] memory facetAddresses_);\n\n    /// @notice Gets the facet that supports the given selector.\n    /// @dev If facet is not found return address(0).\n    /// @param _functionSelector The function selector.\n    /// @return facetAddress_ The facet address.\n    function facetAddress(bytes4 _functionSelector) external view returns (address facetAddress_);\n}"
			},
			"shared/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\ninterface IERC165 {\n    /// @notice Query if a contract implements an interface\n    /// @param interfaceId The interface identifier, as specified in ERC-165\n    /// @dev Interface identification is specified in ERC-165. This function\n    ///  uses less than 30,000 gas.\n    /// @return `true` if the contract implements `interfaceID` and\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			},
			"shared/interfaces/IDiamondCut.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n/******************************************************************************/\n\ninterface IDiamondCut {\n    enum FacetCutAction {Add, Replace, Remove}\n\n    struct FacetCut {\n        address facetAddress;\n        FacetCutAction action;\n        bytes4[] functionSelectors;\n    }\n\n    /// @notice Add/replace/remove any number of functions and optionally execute\n    ///         a function with delegatecall\n    /// @param _diamondCut Contains the facet addresses and function selectors\n    /// @param _init The address of the contract or facet to execute _calldata\n    /// @param _calldata A function call, including function selector and arguments\n    ///                  _calldata is executed with delegatecall on _init\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external;\n\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\n}"
			},
			"shared/libs/LibDiamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\n/******************************************************************************\\\n* Author: Nick Mudge <nick@perfectabstractions.com> (https://twitter.com/mudgen)\n* EIP-2535 Diamond Standard: https://eips.ethereum.org/EIPS/eip-2535\n/******************************************************************************/\n\nimport {IDiamondCut} from \"../interfaces/IDiamondCut.sol\";\nimport {IDiamondLoupe} from \"../interfaces/IDiamondLoupe.sol\";\nimport {IERC165} from \"../interfaces/IERC165.sol\";\nimport {IERC173} from \"../interfaces/IERC173.sol\";\nimport {LibMeta} from \"./LibMeta.sol\";\n\nlibrary LibDiamond {\n    bytes32 constant DIAMOND_STORAGE_POSITION = keccak256(\"diamond.standard.diamond.storage\");\n\n    struct FacetAddressAndPosition {\n        address facetAddress;\n        uint16 functionSelectorPosition; // position in facetFunctionSelectors.functionSelectors array\n    }\n\n    struct FacetFunctionSelectors {\n        bytes4[] functionSelectors;\n        uint16 facetAddressPosition; // position of facetAddress in facetAddresses array\n    }\n\n    struct DiamondStorage {\n        // maps function selector to the facet address and\n        // the position of the selector in the facetFunctionSelectors.selectors array\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\n        // maps facet addresses to function selectors\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\n        // facet addresses\n        address[] facetAddresses;\n        // Used to query if a contract implements an interface.\n        // Used to implement ERC-165.\n        mapping(bytes4 => bool) supportedInterfaces;\n        // owner of the contract\n        address contractOwner;\n    }\n\n    function diamondStorage() internal pure returns (DiamondStorage storage ds) {\n        bytes32 position = DIAMOND_STORAGE_POSITION;\n        assembly {\n            ds.slot := position\n        }\n    }\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    function setContractOwner(address _newOwner) internal {\n        DiamondStorage storage ds = diamondStorage();\n        address previousOwner = ds.contractOwner;\n        ds.contractOwner = _newOwner;\n        emit OwnershipTransferred(previousOwner, _newOwner);\n    }\n\n    function contractOwner() internal view returns (address contractOwner_) {\n        contractOwner_ = diamondStorage().contractOwner;\n    }\n\n    function enforceIsContractOwner() internal view {\n        require(LibMeta.msgSender() == diamondStorage().contractOwner, \"LibDiamond: Must be contract owner\");\n    }\n\n    event DiamondCut(IDiamondCut.FacetCut[] _diamondCut, address _init, bytes _calldata);\n\n    function addDiamondFunctions(\n        address _diamondCutFacet,\n        address _diamondLoupeFacet,\n        address _ownershipFacet\n    ) internal {\n        IDiamondCut.FacetCut[] memory cut = new IDiamondCut.FacetCut[](3);\n        bytes4[] memory functionSelectors = new bytes4[](1);\n        functionSelectors[0] = IDiamondCut.diamondCut.selector;\n        cut[0] = IDiamondCut.FacetCut({facetAddress: _diamondCutFacet, action: IDiamondCut.FacetCutAction.Add, functionSelectors: functionSelectors});\n        functionSelectors = new bytes4[](5);\n        functionSelectors[0] = IDiamondLoupe.facets.selector;\n        functionSelectors[1] = IDiamondLoupe.facetFunctionSelectors.selector;\n        functionSelectors[2] = IDiamondLoupe.facetAddresses.selector;\n        functionSelectors[3] = IDiamondLoupe.facetAddress.selector;\n        functionSelectors[4] = IERC165.supportsInterface.selector;\n        cut[1] = IDiamondCut.FacetCut({\n            facetAddress: _diamondLoupeFacet,\n            action: IDiamondCut.FacetCutAction.Add,\n            functionSelectors: functionSelectors\n        });\n        functionSelectors = new bytes4[](2);\n        functionSelectors[0] = IERC173.transferOwnership.selector;\n        functionSelectors[1] = IERC173.owner.selector;\n        cut[2] = IDiamondCut.FacetCut({facetAddress: _ownershipFacet, action: IDiamondCut.FacetCutAction.Add, functionSelectors: functionSelectors});\n        diamondCut(cut, address(0), \"\");\n    }\n\n    // Internal function version of diamondCut\n    function diamondCut(\n        IDiamondCut.FacetCut[] memory _diamondCut,\n        address _init,\n        bytes memory _calldata\n    ) internal {\n        for (uint256 facetIndex; facetIndex < _diamondCut.length; facetIndex++) {\n            IDiamondCut.FacetCutAction action = _diamondCut[facetIndex].action;\n            if (action == IDiamondCut.FacetCutAction.Add) {\n                addFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Replace) {\n                replaceFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else if (action == IDiamondCut.FacetCutAction.Remove) {\n                removeFunctions(_diamondCut[facetIndex].facetAddress, _diamondCut[facetIndex].functionSelectors);\n            } else {\n                revert(\"LibDiamondCut: Incorrect FacetCutAction\");\n            }\n        }\n        emit DiamondCut(_diamondCut, _init, _calldata);\n        initializeDiamondCut(_init, _calldata);\n    }\n\n    function addFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();\n        // uint16 selectorCount = uint16(diamondStorage().selectors.length);\n        require(_facetAddress != address(0), \"LibDiamondCut: Add facet can't be address(0)\");\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            enforceHasContractCode(_facetAddress, \"LibDiamondCut: New facet has no code\");\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\n            ds.facetAddresses.push(_facetAddress);\n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            require(oldFacetAddress == address(0), \"LibDiamondCut: Can't add function that already exists\");\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\n            selectorPosition++;\n        }\n    }\n\n    function replaceFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();\n        require(_facetAddress != address(0), \"LibDiamondCut: Add facet can't be address(0)\");\n        uint16 selectorPosition = uint16(ds.facetFunctionSelectors[_facetAddress].functionSelectors.length);\n        // add new facet address if it does not exist\n        if (selectorPosition == 0) {\n            enforceHasContractCode(_facetAddress, \"LibDiamondCut: New facet has no code\");\n            ds.facetFunctionSelectors[_facetAddress].facetAddressPosition = uint16(ds.facetAddresses.length);\n            ds.facetAddresses.push(_facetAddress);\n        }\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            require(oldFacetAddress != _facetAddress, \"LibDiamondCut: Can't replace function with same function\");\n            removeFunction(oldFacetAddress, selector);\n            // add function\n            ds.selectorToFacetAndPosition[selector].functionSelectorPosition = selectorPosition;\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors.push(selector);\n            ds.selectorToFacetAndPosition[selector].facetAddress = _facetAddress;\n            selectorPosition++;\n        }\n    }\n\n    function removeFunctions(address _facetAddress, bytes4[] memory _functionSelectors) internal {\n        require(_functionSelectors.length > 0, \"LibDiamondCut: No selectors in facet to cut\");\n        DiamondStorage storage ds = diamondStorage();\n        // if function does not exist then do nothing and return\n        require(_facetAddress == address(0), \"LibDiamondCut: Remove facet address must be address(0)\");\n        for (uint256 selectorIndex; selectorIndex < _functionSelectors.length; selectorIndex++) {\n            bytes4 selector = _functionSelectors[selectorIndex];\n            address oldFacetAddress = ds.selectorToFacetAndPosition[selector].facetAddress;\n            removeFunction(oldFacetAddress, selector);\n        }\n    }\n\n    function removeFunction(address _facetAddress, bytes4 _selector) internal {\n        DiamondStorage storage ds = diamondStorage();\n        require(_facetAddress != address(0), \"LibDiamondCut: Can't remove function that doesn't exist\");\n        // an immutable function is a function defined directly in a diamond\n        require(_facetAddress != address(this), \"LibDiamondCut: Can't remove immutable function\");\n        // replace selector with last selector, then delete last selector\n        uint256 selectorPosition = ds.selectorToFacetAndPosition[_selector].functionSelectorPosition;\n        uint256 lastSelectorPosition = ds.facetFunctionSelectors[_facetAddress].functionSelectors.length - 1;\n        // if not the same then replace _selector with lastSelector\n        if (selectorPosition != lastSelectorPosition) {\n            bytes4 lastSelector = ds.facetFunctionSelectors[_facetAddress].functionSelectors[lastSelectorPosition];\n            ds.facetFunctionSelectors[_facetAddress].functionSelectors[selectorPosition] = lastSelector;\n            ds.selectorToFacetAndPosition[lastSelector].functionSelectorPosition = uint16(selectorPosition);\n        }\n        // delete the last selector\n        ds.facetFunctionSelectors[_facetAddress].functionSelectors.pop();\n        delete ds.selectorToFacetAndPosition[_selector];\n\n        // if no more selectors for facet address then delete the facet address\n        if (lastSelectorPosition == 0) {\n            // replace facet address with last facet address and delete last facet address\n            uint256 lastFacetAddressPosition = ds.facetAddresses.length - 1;\n            uint256 facetAddressPosition = ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n            if (facetAddressPosition != lastFacetAddressPosition) {\n                address lastFacetAddress = ds.facetAddresses[lastFacetAddressPosition];\n                ds.facetAddresses[facetAddressPosition] = lastFacetAddress;\n                ds.facetFunctionSelectors[lastFacetAddress].facetAddressPosition = uint16(facetAddressPosition);\n            }\n            ds.facetAddresses.pop();\n            delete ds.facetFunctionSelectors[_facetAddress].facetAddressPosition;\n        }\n    }\n\n    function initializeDiamondCut(address _init, bytes memory _calldata) internal {\n        if (_init == address(0)) {\n            require(_calldata.length == 0, \"LibDiamondCut: _init is address(0) but_calldata is not empty\");\n        } else {\n            require(_calldata.length > 0, \"LibDiamondCut: _calldata is empty but _init is not address(0)\");\n            if (_init != address(this)) {\n                enforceHasContractCode(_init, \"LibDiamondCut: _init address has no code\");\n            }\n            (bool success, bytes memory error) = _init.delegatecall(_calldata);\n            if (success == false) {\n                if (error.length > 0) {\n                    // bubble up the error\n                    revert(string(error));\n                } else {\n                    revert(\"LibDiamondCut: _init function reverted\");\n                }\n            }\n        }\n    }\n\n    function enforceHasContractCode(address _contract, string memory _errorMessage) internal view {\n        uint256 contractSize;\n        assembly {\n            contractSize := extcodesize(_contract)\n        }\n        require(contractSize != 0, _errorMessage);\n    }\n}"
			},
			"shared/libs/LibMeta.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\nlibrary LibMeta {\n    bytes32 internal constant EIP712_DOMAIN_TYPEHASH =\n        keccak256(bytes(\"EIP712Domain(string name,string version,uint256 salt,address verifyingContract)\"));\n\n    function domainSeparator(string memory name, string memory version) internal view returns (bytes32 domainSeparator_) {\n        domainSeparator_ = keccak256(\n            abi.encode(EIP712_DOMAIN_TYPEHASH, keccak256(bytes(name)), keccak256(bytes(version)), getChainID(), address(this))\n        );\n    }\n\n    function getChainID() internal view returns (uint256 id) {\n        assembly {\n            id := chainid()\n        }\n    }\n\n    function msgSender() internal view returns (address sender_) {\n        if (msg.sender == address(this)) {\n            bytes memory array = msg.data;\n            uint256 index = msg.data.length;\n            assembly {\n                // Load the 32 bytes word from memory with the address on the lower 20 bytes, and mask those.\n                sender_ := and(mload(add(array, index)), 0xffffffffffffffffffffffffffffffffffffffff)\n            }\n        } else {\n            sender_ = msg.sender;\n        }\n    }\n}"
			},
			"Tmons/libs/LibAppStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.1;\n\n\n\nstruct AppStorage {\n    string name;\n    string symbol;\n}\n\nlibrary LibAppStorage {\n    function diamondStorage() internal pure returns (AppStorage storage ds) {\n        assembly {\n            ds.slot := 0\n        }\n    }\n\n    function abs(int256 x) internal pure returns (uint256) {\n        return uint256(x >= 0 ? x : -x);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Tmons/InitDiamond.sol": {
				"InitDiamond": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										}
									],
									"internalType": "struct InitDiamond.Args",
									"name": "_args",
									"type": "tuple"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tmons/InitDiamond.sol\":520:1149  contract InitDiamond {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tmons/InitDiamond.sol\":520:1149  contract InitDiamond {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0edacbd3\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Tmons/InitDiamond.sol\":645:1147  function init(Args memory _args) external {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"Tmons/InitDiamond.sol\":698:734  LibDiamond.DiamondStorage storage ds */\n      0x00\n        /* \"Tmons/InitDiamond.sol\":737:764  LibDiamond.diamondStorage() */\n      tag_9\n        /* \"Tmons/InitDiamond.sol\":737:762  LibDiamond.diamondStorage */\n      tag_10\n        /* \"Tmons/InitDiamond.sol\":737:764  LibDiamond.diamondStorage() */\n      jump\t// in\n    tag_9:\n        /* \"Tmons/InitDiamond.sol\":698:764  LibDiamond.DiamondStorage storage ds = LibDiamond.diamondStorage() */\n      swap1\n      pop\n        /* \"Tmons/InitDiamond.sol\":857:861  true */\n      0x01\n        /* \"Tmons/InitDiamond.sol\":805:807  ds */\n      dup2\n        /* \"Tmons/InitDiamond.sol\":805:827  ds.supportedInterfaces */\n      0x03\n      add\n        /* \"Tmons/InitDiamond.sol\":805:854  ds.supportedInterfaces[type(IERC165).interfaceId] */\n      0x00\n        /* \"Tmons/InitDiamond.sol\":828:853  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"Tmons/InitDiamond.sol\":805:854  ds.supportedInterfaces[type(IERC165).interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tmons/InitDiamond.sol\":805:861  ds.supportedInterfaces[type(IERC165).interfaceId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tmons/InitDiamond.sol\":927:931  true */\n      0x01\n        /* \"Tmons/InitDiamond.sol\":871:873  ds */\n      dup2\n        /* \"Tmons/InitDiamond.sol\":871:893  ds.supportedInterfaces */\n      0x03\n      add\n        /* \"Tmons/InitDiamond.sol\":871:924  ds.supportedInterfaces[type(IDiamondCut).interfaceId] */\n      0x00\n        /* \"Tmons/InitDiamond.sol\":894:923  type(IDiamondCut).interfaceId */\n      0x1f931c1c00000000000000000000000000000000000000000000000000000000\n        /* \"Tmons/InitDiamond.sol\":871:924  ds.supportedInterfaces[type(IDiamondCut).interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tmons/InitDiamond.sol\":871:931  ds.supportedInterfaces[type(IDiamondCut).interfaceId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tmons/InitDiamond.sol\":999:1003  true */\n      0x01\n        /* \"Tmons/InitDiamond.sol\":941:943  ds */\n      dup2\n        /* \"Tmons/InitDiamond.sol\":941:963  ds.supportedInterfaces */\n      0x03\n      add\n        /* \"Tmons/InitDiamond.sol\":941:996  ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] */\n      0x00\n        /* \"Tmons/InitDiamond.sol\":964:995  type(IDiamondLoupe).interfaceId */\n      0x48e2b09300000000000000000000000000000000000000000000000000000000\n        /* \"Tmons/InitDiamond.sol\":941:996  ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tmons/InitDiamond.sol\":941:1003  ds.supportedInterfaces[type(IDiamondLoupe).interfaceId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tmons/InitDiamond.sol\":1065:1069  true */\n      0x01\n        /* \"Tmons/InitDiamond.sol\":1013:1015  ds */\n      dup2\n        /* \"Tmons/InitDiamond.sol\":1013:1035  ds.supportedInterfaces */\n      0x03\n      add\n        /* \"Tmons/InitDiamond.sol\":1013:1062  ds.supportedInterfaces[type(IERC173).interfaceId] */\n      0x00\n        /* \"Tmons/InitDiamond.sol\":1036:1061  type(IERC173).interfaceId */\n      0x7f5828d000000000000000000000000000000000000000000000000000000000\n        /* \"Tmons/InitDiamond.sol\":1013:1062  ds.supportedInterfaces[type(IERC173).interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Tmons/InitDiamond.sol\":1013:1069  ds.supportedInterfaces[type(IERC173).interfaceId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Tmons/InitDiamond.sol\":1097:1102  _args */\n      dup2\n        /* \"Tmons/InitDiamond.sol\":1097:1107  _args.name */\n      0x00\n      add\n      mload\n        /* \"Tmons/InitDiamond.sol\":1088:1089  s */\n      0x00\n        /* \"Tmons/InitDiamond.sol\":1088:1094  s.name */\n      dup1\n      add\n        /* \"Tmons/InitDiamond.sol\":1088:1107  s.name = _args.name */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_11\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      pop\n        /* \"Tmons/InitDiamond.sol\":1128:1133  _args */\n      dup2\n        /* \"Tmons/InitDiamond.sol\":1128:1140  _args.symbol */\n      0x20\n      add\n      mload\n        /* \"Tmons/InitDiamond.sol\":1117:1118  s */\n      0x00\n        /* \"Tmons/InitDiamond.sol\":1117:1125  s.symbol */\n      0x01\n      add\n        /* \"Tmons/InitDiamond.sol\":1117:1140  s.symbol = _args.symbol */\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      tag_13\n      swap3\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_13:\n      pop\n        /* \"Tmons/InitDiamond.sol\":645:1147  function init(Args memory _args) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"shared/libs/LibDiamond.sol\":1767:1964  function diamondStorage() internal pure returns (DiamondStorage storage ds) {... */\n    tag_10:\n        /* \"shared/libs/LibDiamond.sol\":1816:1841  DiamondStorage storage ds */\n      0x00\n        /* \"shared/libs/LibDiamond.sol\":1853:1869  bytes32 position */\n      dup1\n        /* \"shared/libs/LibDiamond.sol\":702:747  keccak256(\"diamond.standard.diamond.storage\") */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c\n        /* \"shared/libs/LibDiamond.sol\":1853:1896  bytes32 position = DIAMOND_STORAGE_POSITION */\n      swap1\n      pop\n        /* \"shared/libs/LibDiamond.sol\":1940:1948  position */\n      dup1\n        /* \"shared/libs/LibDiamond.sol\":1929:1948  ds.slot := position */\n      swap2\n      pop\n        /* \"shared/libs/LibDiamond.sol\":1915:1958  {... */\n      pop\n      swap1\n      jump\t// out\n    tag_12:\n      dup3\n      dup1\n      sload\n      tag_15\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_18\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_17)\n    tag_18:\n      dup3\n      0x1f\n      lt\n      tag_19\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_17)\n    tag_19:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_17\n      jumpi\n      swap2\n      dup3\n      add\n    tag_20:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_20)\n    tag_21:\n    tag_17:\n      pop\n      swap1\n      pop\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      pop\n      swap1\n      jump\t// out\n    tag_23:\n    tag_24:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_24)\n    tag_25:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:352   */\n    tag_27:\n      0x00\n        /* \"#utility.yul\":110:176   */\n      tag_29\n        /* \"#utility.yul\":126:175   */\n      tag_30\n        /* \"#utility.yul\":168:174   */\n      dup5\n        /* \"#utility.yul\":126:175   */\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":110:176   */\n      tag_32\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":101:176   */\n      swap1\n      pop\n        /* \"#utility.yul\":199:205   */\n      dup3\n        /* \"#utility.yul\":192:197   */\n      dup2\n        /* \"#utility.yul\":185:206   */\n      mstore\n        /* \"#utility.yul\":237:241   */\n      0x20\n        /* \"#utility.yul\":230:235   */\n      dup2\n        /* \"#utility.yul\":226:242   */\n      add\n        /* \"#utility.yul\":275:278   */\n      dup5\n        /* \"#utility.yul\":266:272   */\n      dup5\n        /* \"#utility.yul\":261:264   */\n      dup5\n        /* \"#utility.yul\":257:273   */\n      add\n        /* \"#utility.yul\":254:279   */\n      gt\n        /* \"#utility.yul\":251:253   */\n      iszero\n      tag_33\n      jumpi\n        /* \"#utility.yul\":292:293   */\n      0x00\n        /* \"#utility.yul\":289:290   */\n      dup1\n        /* \"#utility.yul\":282:294   */\n      revert\n        /* \"#utility.yul\":251:253   */\n    tag_33:\n        /* \"#utility.yul\":305:346   */\n      tag_34\n        /* \"#utility.yul\":339:345   */\n      dup5\n        /* \"#utility.yul\":334:337   */\n      dup3\n        /* \"#utility.yul\":329:332   */\n      dup6\n        /* \"#utility.yul\":305:346   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":91:352   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":372:645   */\n    tag_36:\n      0x00\n        /* \"#utility.yul\":477:480   */\n      dup3\n        /* \"#utility.yul\":470:474   */\n      0x1f\n        /* \"#utility.yul\":462:468   */\n      dup4\n        /* \"#utility.yul\":458:475   */\n      add\n        /* \"#utility.yul\":454:481   */\n      slt\n        /* \"#utility.yul\":444:446   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":495:496   */\n      0x00\n        /* \"#utility.yul\":492:493   */\n      dup1\n        /* \"#utility.yul\":485:497   */\n      revert\n        /* \"#utility.yul\":444:446   */\n    tag_38:\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":522:542   */\n      calldataload\n        /* \"#utility.yul\":560:639   */\n      tag_39\n        /* \"#utility.yul\":635:638   */\n      dup5\n        /* \"#utility.yul\":627:633   */\n      dup3\n        /* \"#utility.yul\":620:624   */\n      0x20\n        /* \"#utility.yul\":612:618   */\n      dup7\n        /* \"#utility.yul\":608:625   */\n      add\n        /* \"#utility.yul\":560:639   */\n      tag_27\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":551:639   */\n      swap2\n      pop\n        /* \"#utility.yul\":434:645   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":682:1392   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":795:799   */\n      0x40\n        /* \"#utility.yul\":783:792   */\n      dup3\n        /* \"#utility.yul\":778:781   */\n      dup5\n        /* \"#utility.yul\":774:793   */\n      sub\n        /* \"#utility.yul\":770:800   */\n      slt\n        /* \"#utility.yul\":767:769   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":813:814   */\n      0x00\n        /* \"#utility.yul\":810:811   */\n      dup1\n        /* \"#utility.yul\":803:815   */\n      revert\n        /* \"#utility.yul\":767:769   */\n    tag_42:\n        /* \"#utility.yul\":835:856   */\n      tag_43\n        /* \"#utility.yul\":851:855   */\n      0x40\n        /* \"#utility.yul\":835:856   */\n      tag_32\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":826:856   */\n      swap1\n      pop\n        /* \"#utility.yul\":943:944   */\n      0x00\n        /* \"#utility.yul\":932:941   */\n      dup3\n        /* \"#utility.yul\":928:945   */\n      add\n        /* \"#utility.yul\":915:946   */\n      calldataload\n        /* \"#utility.yul\":973:991   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":965:971   */\n      dup2\n        /* \"#utility.yul\":962:992   */\n      gt\n        /* \"#utility.yul\":959:961   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1005:1006   */\n      0x00\n        /* \"#utility.yul\":1002:1003   */\n      dup1\n        /* \"#utility.yul\":995:1007   */\n      revert\n        /* \"#utility.yul\":959:961   */\n    tag_44:\n        /* \"#utility.yul\":1048:1107   */\n      tag_45\n        /* \"#utility.yul\":1103:1106   */\n      dup5\n        /* \"#utility.yul\":1094:1100   */\n      dup3\n        /* \"#utility.yul\":1083:1092   */\n      dup6\n        /* \"#utility.yul\":1079:1101   */\n      add\n        /* \"#utility.yul\":1048:1107   */\n      tag_36\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1041:1045   */\n      0x00\n        /* \"#utility.yul\":1034:1039   */\n      dup4\n        /* \"#utility.yul\":1030:1046   */\n      add\n        /* \"#utility.yul\":1023:1108   */\n      mstore\n        /* \"#utility.yul\":866:1119   */\n      pop\n        /* \"#utility.yul\":1208:1210   */\n      0x20\n        /* \"#utility.yul\":1197:1206   */\n      dup3\n        /* \"#utility.yul\":1193:1211   */\n      add\n        /* \"#utility.yul\":1180:1212   */\n      calldataload\n        /* \"#utility.yul\":1239:1257   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1231:1237   */\n      dup2\n        /* \"#utility.yul\":1228:1258   */\n      gt\n        /* \"#utility.yul\":1225:1227   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1271:1272   */\n      0x00\n        /* \"#utility.yul\":1268:1269   */\n      dup1\n        /* \"#utility.yul\":1261:1273   */\n      revert\n        /* \"#utility.yul\":1225:1227   */\n    tag_46:\n        /* \"#utility.yul\":1314:1373   */\n      tag_47\n        /* \"#utility.yul\":1369:1372   */\n      dup5\n        /* \"#utility.yul\":1360:1366   */\n      dup3\n        /* \"#utility.yul\":1349:1358   */\n      dup6\n        /* \"#utility.yul\":1345:1367   */\n      add\n        /* \"#utility.yul\":1314:1373   */\n      tag_36\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1307:1311   */\n      0x20\n        /* \"#utility.yul\":1300:1305   */\n      dup4\n        /* \"#utility.yul\":1296:1312   */\n      add\n        /* \"#utility.yul\":1289:1374   */\n      mstore\n        /* \"#utility.yul\":1129:1385   */\n      pop\n        /* \"#utility.yul\":757:1392   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1398:1793   */\n    tag_6:\n      0x00\n        /* \"#utility.yul\":1526:1528   */\n      0x20\n        /* \"#utility.yul\":1514:1523   */\n      dup3\n        /* \"#utility.yul\":1505:1512   */\n      dup5\n        /* \"#utility.yul\":1501:1524   */\n      sub\n        /* \"#utility.yul\":1497:1529   */\n      slt\n        /* \"#utility.yul\":1494:1496   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1542:1543   */\n      0x00\n        /* \"#utility.yul\":1539:1540   */\n      dup1\n        /* \"#utility.yul\":1532:1544   */\n      revert\n        /* \"#utility.yul\":1494:1496   */\n    tag_49:\n        /* \"#utility.yul\":1613:1614   */\n      0x00\n        /* \"#utility.yul\":1602:1611   */\n      dup3\n        /* \"#utility.yul\":1598:1615   */\n      add\n        /* \"#utility.yul\":1585:1616   */\n      calldataload\n        /* \"#utility.yul\":1643:1661   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1635:1641   */\n      dup2\n        /* \"#utility.yul\":1632:1662   */\n      gt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1675:1676   */\n      0x00\n        /* \"#utility.yul\":1672:1673   */\n      dup1\n        /* \"#utility.yul\":1665:1677   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_50:\n        /* \"#utility.yul\":1703:1776   */\n      tag_51\n        /* \"#utility.yul\":1768:1775   */\n      dup5\n        /* \"#utility.yul\":1759:1765   */\n      dup3\n        /* \"#utility.yul\":1748:1757   */\n      dup6\n        /* \"#utility.yul\":1744:1766   */\n      add\n        /* \"#utility.yul\":1703:1776   */\n      tag_40\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1693:1776   */\n      swap2\n      pop\n        /* \"#utility.yul\":1556:1786   */\n      pop\n        /* \"#utility.yul\":1484:1793   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1799:1928   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":1860:1880   */\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1850:1880   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:1922   */\n      tag_55\n        /* \"#utility.yul\":1917:1921   */\n      dup3\n        /* \"#utility.yul\":1909:1915   */\n      dup3\n        /* \"#utility.yul\":1889:1922   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1840:1928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1934:2009   */\n    tag_54:\n      0x00\n        /* \"#utility.yul\":2000:2002   */\n      0x40\n        /* \"#utility.yul\":1994:2003   */\n      mload\n        /* \"#utility.yul\":1984:2003   */\n      swap1\n      pop\n        /* \"#utility.yul\":1974:2009   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":2015:2323   */\n    tag_31:\n      0x00\n        /* \"#utility.yul\":2167:2185   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2159:2165   */\n      dup3\n        /* \"#utility.yul\":2156:2186   */\n      gt\n        /* \"#utility.yul\":2153:2155   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":2189:2207   */\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2153:2155   */\n    tag_59:\n        /* \"#utility.yul\":2227:2256   */\n      tag_62\n        /* \"#utility.yul\":2249:2255   */\n      dup3\n        /* \"#utility.yul\":2227:2256   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2219:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2311:2315   */\n      0x20\n        /* \"#utility.yul\":2305:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2316   */\n      add\n        /* \"#utility.yul\":2293:2316   */\n      swap1\n      pop\n        /* \"#utility.yul\":2082:2323   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2329:2483   */\n    tag_35:\n        /* \"#utility.yul\":2413:2419   */\n      dup3\n        /* \"#utility.yul\":2408:2411   */\n      dup2\n        /* \"#utility.yul\":2403:2406   */\n      dup4\n        /* \"#utility.yul\":2390:2420   */\n      calldatacopy\n        /* \"#utility.yul\":2475:2476   */\n      0x00\n        /* \"#utility.yul\":2466:2472   */\n      dup4\n        /* \"#utility.yul\":2461:2464   */\n      dup4\n        /* \"#utility.yul\":2457:2473   */\n      add\n        /* \"#utility.yul\":2450:2477   */\n      mstore\n        /* \"#utility.yul\":2380:2483   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2489:2809   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":2570:2571   */\n      0x02\n        /* \"#utility.yul\":2564:2568   */\n      dup3\n        /* \"#utility.yul\":2560:2572   */\n      div\n        /* \"#utility.yul\":2550:2572   */\n      swap1\n      pop\n        /* \"#utility.yul\":2617:2618   */\n      0x01\n        /* \"#utility.yul\":2611:2615   */\n      dup3\n        /* \"#utility.yul\":2607:2619   */\n      and\n        /* \"#utility.yul\":2638:2656   */\n      dup1\n        /* \"#utility.yul\":2628:2630   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2694:2698   */\n      0x7f\n        /* \"#utility.yul\":2686:2692   */\n      dup3\n        /* \"#utility.yul\":2682:2699   */\n      and\n        /* \"#utility.yul\":2672:2699   */\n      swap2\n      pop\n        /* \"#utility.yul\":2628:2630   */\n    tag_66:\n        /* \"#utility.yul\":2756:2758   */\n      0x20\n        /* \"#utility.yul\":2748:2754   */\n      dup3\n        /* \"#utility.yul\":2745:2759   */\n      lt\n        /* \"#utility.yul\":2725:2743   */\n      dup2\n        /* \"#utility.yul\":2722:2760   */\n      eq\n        /* \"#utility.yul\":2719:2721   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2775:2793   */\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2719:2721   */\n    tag_67:\n        /* \"#utility.yul\":2540:2809   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2815:3096   */\n    tag_56:\n        /* \"#utility.yul\":2898:2925   */\n      tag_71\n        /* \"#utility.yul\":2920:2924   */\n      dup3\n        /* \"#utility.yul\":2898:2925   */\n      tag_63\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2890:2896   */\n      dup2\n        /* \"#utility.yul\":2886:2926   */\n      add\n        /* \"#utility.yul\":3028:3034   */\n      dup2\n        /* \"#utility.yul\":3016:3026   */\n      dup2\n        /* \"#utility.yul\":3013:3035   */\n      lt\n        /* \"#utility.yul\":2992:3010   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2980:2990   */\n      dup3\n        /* \"#utility.yul\":2977:3011   */\n      gt\n        /* \"#utility.yul\":2974:3036   */\n      or\n        /* \"#utility.yul\":2971:2973   */\n      iszero\n      tag_72\n      jumpi\n        /* \"#utility.yul\":3039:3057   */\n      tag_73\n      tag_61\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2971:2973   */\n    tag_72:\n        /* \"#utility.yul\":3079:3089   */\n      dup1\n        /* \"#utility.yul\":3075:3077   */\n      0x40\n        /* \"#utility.yul\":3068:3090   */\n      mstore\n        /* \"#utility.yul\":2858:3096   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3102:3282   */\n    tag_69:\n        /* \"#utility.yul\":3150:3227   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3147:3148   */\n      0x00\n        /* \"#utility.yul\":3140:3228   */\n      mstore\n        /* \"#utility.yul\":3247:3251   */\n      0x22\n        /* \"#utility.yul\":3244:3245   */\n      0x04\n        /* \"#utility.yul\":3237:3252   */\n      mstore\n        /* \"#utility.yul\":3271:3275   */\n      0x24\n        /* \"#utility.yul\":3268:3269   */\n      0x00\n        /* \"#utility.yul\":3261:3276   */\n      revert\n        /* \"#utility.yul\":3288:3468   */\n    tag_61:\n        /* \"#utility.yul\":3336:3413   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3333:3334   */\n      0x00\n        /* \"#utility.yul\":3326:3414   */\n      mstore\n        /* \"#utility.yul\":3433:3437   */\n      0x41\n        /* \"#utility.yul\":3430:3431   */\n      0x04\n        /* \"#utility.yul\":3423:3438   */\n      mstore\n        /* \"#utility.yul\":3457:3461   */\n      0x24\n        /* \"#utility.yul\":3454:3455   */\n      0x00\n        /* \"#utility.yul\":3447:3462   */\n      revert\n        /* \"#utility.yul\":3474:3576   */\n    tag_63:\n      0x00\n        /* \"#utility.yul\":3566:3568   */\n      0x1f\n        /* \"#utility.yul\":3562:3569   */\n      not\n        /* \"#utility.yul\":3557:3559   */\n      0x1f\n        /* \"#utility.yul\":3550:3555   */\n      dup4\n        /* \"#utility.yul\":3546:3560   */\n      add\n        /* \"#utility.yul\":3542:3570   */\n      and\n        /* \"#utility.yul\":3532:3570   */\n      swap1\n      pop\n        /* \"#utility.yul\":3522:3576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220accaa162d03f5fd7106c56c2ae41db0376a01ee66ea18b78f1eef1ea708d426264736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610629806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630edacbd314610030575b600080fd5b61004a6004803603810190610045919061047b565b61004c565b005b60006100566102c7565b905060018160030160007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f1f931c1c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f48e2b093000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f7f5828d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001516000800190805190602001906102a49291906102f4565b508160200151600060010190805190602001906102c29291906102f4565b505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b82805461030090610521565b90600052602060002090601f0160209004810192826103225760008555610369565b82601f1061033b57805160ff1916838001178555610369565b82800160010185558215610369579182015b8281111561036857825182559160200191906001019061034d565b5b509050610376919061037a565b5090565b5b8082111561039357600081600090555060010161037b565b5090565b60006103aa6103a5846104e1565b6104bc565b9050828152602081018484840111156103c257600080fd5b6103cd848285610512565b509392505050565b600082601f8301126103e657600080fd5b81356103f6848260208601610397565b91505092915050565b60006040828403121561041157600080fd5b61041b60406104bc565b9050600082013567ffffffffffffffff81111561043757600080fd5b610443848285016103d5565b600083015250602082013567ffffffffffffffff81111561046357600080fd5b61046f848285016103d5565b60208301525092915050565b60006020828403121561048d57600080fd5b600082013567ffffffffffffffff8111156104a757600080fd5b6104b3848285016103ff565b91505092915050565b60006104c66104d7565b90506104d28282610553565b919050565b6000604051905090565b600067ffffffffffffffff8211156104fc576104fb6105b3565b5b610505826105e2565b9050602081019050919050565b82818337600083830152505050565b6000600282049050600182168061053957607f821691505b6020821081141561054d5761054c610584565b5b50919050565b61055c826105e2565b810181811067ffffffffffffffff8211171561057b5761057a6105b3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220accaa162d03f5fd7106c56c2ae41db0376a01ee66ea18b78f1eef1ea708d426264736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x629 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEDACBD3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x56 PUSH2 0x2C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x1F931C1C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x48E2B09300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x7F5828D000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2C2 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0x521 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x322 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x369 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x33B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x369 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x369 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x368 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x34D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA PUSH2 0x3A5 DUP5 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CD DUP5 DUP3 DUP6 PUSH2 0x512 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x397 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41B PUSH1 0x40 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x443 DUP5 DUP3 DUP6 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46F DUP5 DUP3 DUP6 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D2 DUP3 DUP3 PUSH2 0x553 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x5B3 JUMP JUMPDEST JUMPDEST PUSH2 0x505 DUP3 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x539 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x584 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55C DUP3 PUSH2 0x5E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x5B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xCA LOG1 PUSH3 0xD03F5F 0xD7 LT PUSH13 0x56C2AE41DB0376A01EE66EA18B PUSH25 0xF1EEF1EA708D426264736F6C63430008010033000000000000 ",
							"sourceMap": "520:629:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3579:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "91:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "101:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "168:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "126:41:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "110:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "110:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "101:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "192:5:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "199:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "185:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:21:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "185:21:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "215:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "230:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "237:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "226:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "226:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "219:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "280:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "289:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "292:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "282:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "282:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "282:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "261:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "266:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "257:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "257:16:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "275:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "254:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:25:8"
															},
															"nodeType": "YulIf",
															"src": "251:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "329:3:8"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "334:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "339:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "305:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "305:41:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "64:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "69:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "77:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "85:5:8",
														"type": ""
													}
												],
												"src": "7:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "434:211:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "483:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "492:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "495:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "485:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "485:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "485:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "462:6:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "470:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:17:8"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "477:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "454:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "454:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "447:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "447:35:8"
															},
															"nodeType": "YulIf",
															"src": "444:2:8"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "508:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "535:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "522:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "512:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "551:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "620:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "608:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "608:17:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "627:6:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "635:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "560:47:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "551:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "412:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "420:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "428:5:8",
														"type": ""
													}
												],
												"src": "372:273:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:635:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "801:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "810:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "813:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "803:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "803:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "803:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "778:3:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "783:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "774:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:19:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "795:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "770:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "770:30:8"
															},
															"nodeType": "YulIf",
															"src": "767:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:30:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "851:4:8",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "835:15:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "866:253:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "901:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "932:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "943:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "928:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "928:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "915:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "915:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "905:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "993:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1002:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1005:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "995:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "995:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "995:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "965:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "973:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "962:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "962:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "959:2:8"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1034:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1041:4:8",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1030:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1030:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "1083:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "1094:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1079:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1079:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "1103:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_string_memory_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "1048:30:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1048:59:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "1023:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:85:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1023:85:8"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1129:256:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1166:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1197:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1208:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1193:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1193:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1180:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1180:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1170:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1259:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1268:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1271:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1261:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1261:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1261:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1231:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1239:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1228:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1228:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "1225:2:8"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1300:5:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1307:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1296:16:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "1349:9:8"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "1360:6:8"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1345:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1345:22:8"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "1369:3:8"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_string_memory_ptr",
																					"nodeType": "YulIdentifier",
																					"src": "1314:30:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1314:59:8"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "1289:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:85:8"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1289:85:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_Args_$23_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "732:9:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "743:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "751:5:8",
														"type": ""
													}
												],
												"src": "682:710:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1484:309:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1530:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1539:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1542:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1532:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1532:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1532:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1505:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1514:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1526:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:32:8"
															},
															"nodeType": "YulIf",
															"src": "1494:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1556:230:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1571:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1602:9:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1613:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1598:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1598:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1585:12:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1585:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1575:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1663:16:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1672:1:8",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1675:1:8",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1665:6:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1665:12:8"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1665:12:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1635:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1643:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1632:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:30:8"
																	},
																	"nodeType": "YulIf",
																	"src": "1629:2:8"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1693:83:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1748:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1759:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1744:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1744:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1768:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_Args_$23_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1703:40:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1703:73:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1693:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_Args_$23_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1454:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1465:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1477:6:8",
														"type": ""
													}
												],
												"src": "1398:395:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1840:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1850:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1860:18:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1860:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1909:6:8"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1917:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1889:19:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1824:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1833:6:8",
														"type": ""
													}
												],
												"src": "1799:129:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1974:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1984:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1994:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1967:6:8",
														"type": ""
													}
												],
												"src": "1934:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:241:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2187:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2189:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2189:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2189:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2159:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2167:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2156:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2156:30:8"
															},
															"nodeType": "YulIf",
															"src": "2153:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2219:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2249:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2227:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2219:4:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2293:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2305:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2311:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2301:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2301:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2293:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2066:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2077:4:8",
														"type": ""
													}
												],
												"src": "2015:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2380:103:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2403:3:8"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2408:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2413:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2390:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2390:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2461:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2466:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2475:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2450:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2362:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2367:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2372:6:8",
														"type": ""
													}
												],
												"src": "2329:154:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2540:269:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2550:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2564:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2570:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2560:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2560:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2550:6:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2581:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2611:4:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2617:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2585:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2658:51:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2672:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2686:6:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2694:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2682:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2672:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2638:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2631:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2631:26:8"
															},
															"nodeType": "YulIf",
															"src": "2628:2:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2761:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2775:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2775:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2775:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2725:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2748:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2756:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2745:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2745:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:38:8"
															},
															"nodeType": "YulIf",
															"src": "2719:2:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2524:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2533:6:8",
														"type": ""
													}
												],
												"src": "2489:320:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2858:238:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2868:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2890:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2920:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2898:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2898:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2886:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2886:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2872:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3037:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3039:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3039:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3039:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2980:10:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2992:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2977:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2977:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3016:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3028:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3013:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2974:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:62:8"
															},
															"nodeType": "YulIf",
															"src": "2971:2:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3075:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3079:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3068:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3068:22:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3068:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2844:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2852:4:8",
														"type": ""
													}
												],
												"src": "2815:281:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3130:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3140:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3140:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3244:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3247:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3237:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3237:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3268:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3271:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3261:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3261:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3102:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3316:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3333:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3326:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3326:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3430:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3433:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3423:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3454:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3447:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3447:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3447:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3288:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3522:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3532:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3550:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3557:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3546:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3546:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3566:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3562:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3542:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3532:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3505:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "3515:6:8",
														"type": ""
													}
												],
												"src": "3474:102:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct InitDiamond.Args\n    function abi_decode_t_struct$_Args_$23_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        value := allocate_memory(0x40)\n\n        {\n            // name\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // symbol\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x20), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Args_$23_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_Args_$23_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80630edacbd314610030575b600080fd5b61004a6004803603810190610045919061047b565b61004c565b005b60006100566102c7565b905060018160030160007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f1f931c1c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f48e2b093000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f7f5828d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001516000800190805190602001906102a49291906102f4565b508160200151600060010190805190602001906102c29291906102f4565b505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b82805461030090610521565b90600052602060002090601f0160209004810192826103225760008555610369565b82601f1061033b57805160ff1916838001178555610369565b82800160010185558215610369579182015b8281111561036857825182559160200191906001019061034d565b5b509050610376919061037a565b5090565b5b8082111561039357600081600090555060010161037b565b5090565b60006103aa6103a5846104e1565b6104bc565b9050828152602081018484840111156103c257600080fd5b6103cd848285610512565b509392505050565b600082601f8301126103e657600080fd5b81356103f6848260208601610397565b91505092915050565b60006040828403121561041157600080fd5b61041b60406104bc565b9050600082013567ffffffffffffffff81111561043757600080fd5b610443848285016103d5565b600083015250602082013567ffffffffffffffff81111561046357600080fd5b61046f848285016103d5565b60208301525092915050565b60006020828403121561048d57600080fd5b600082013567ffffffffffffffff8111156104a757600080fd5b6104b3848285016103ff565b91505092915050565b60006104c66104d7565b90506104d28282610553565b919050565b6000604051905090565b600067ffffffffffffffff8211156104fc576104fb6105b3565b5b610505826105e2565b9050602081019050919050565b82818337600083830152505050565b6000600282049050600182168061053957607f821691505b6020821081141561054d5761054c610584565b5b50919050565b61055c826105e2565b810181811067ffffffffffffffff8211171561057b5761057a6105b3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220accaa162d03f5fd7106c56c2ae41db0376a01ee66ea18b78f1eef1ea708d426264736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEDACBD3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x56 PUSH2 0x2C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x1F931C1C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x48E2B09300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x7F5828D000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2C2 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0x521 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x322 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x369 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x33B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x369 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x369 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x368 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x34D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA PUSH2 0x3A5 DUP5 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CD DUP5 DUP3 DUP6 PUSH2 0x512 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x397 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41B PUSH1 0x40 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x443 DUP5 DUP3 DUP6 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46F DUP5 DUP3 DUP6 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D2 DUP3 DUP3 PUSH2 0x553 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x5B3 JUMP JUMPDEST JUMPDEST PUSH2 0x505 DUP3 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x539 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x584 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55C DUP3 PUSH2 0x5E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x5B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xCA LOG1 PUSH3 0xD03F5F 0xD7 LT PUSH13 0x56C2AE41DB0376A01EE66EA18B PUSH25 0xF1EEF1EA708D426264736F6C63430008010033000000000000 ",
							"sourceMap": "520:629:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:502;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;698:36;737:27;:25;:27::i;:::-;698:66;;857:4;805:2;:22;;:49;828:25;805:49;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;927:4;871:2;:22;;:53;894:29;871:53;;;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;999:4;941:2;:22;;:55;964:31;941:55;;;;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;1065:4;1013:2;:22;;:49;1036:25;1013:49;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;1097:5;:10;;;1088:1;:6;;:19;;;;;;;;;;;;:::i;:::-;;1128:5;:12;;;1117:1;:8;;:23;;;;;;;;;;;;:::i;:::-;;645:502;;:::o;1767:197:6:-;1816:25;1853:16;702:45;1853:43;;1940:8;1929:19;;1915:43;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:345:8:-;;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;372:273::-;;477:3;470:4;462:6;458:17;454:27;444:2;;495:1;492;485:12;444:2;535:6;522:20;560:79;635:3;627:6;620:4;612:6;608:17;560:79;:::i;:::-;551:88;;434:211;;;;;:::o;682:710::-;;795:4;783:9;778:3;774:19;770:30;767:2;;;813:1;810;803:12;767:2;835:21;851:4;835:21;:::i;:::-;826:30;;943:1;932:9;928:17;915:31;973:18;965:6;962:30;959:2;;;1005:1;1002;995:12;959:2;1048:59;1103:3;1094:6;1083:9;1079:22;1048:59;:::i;:::-;1041:4;1034:5;1030:16;1023:85;866:253;1208:2;1197:9;1193:18;1180:32;1239:18;1231:6;1228:30;1225:2;;;1271:1;1268;1261:12;1225:2;1314:59;1369:3;1360:6;1349:9;1345:22;1314:59;:::i;:::-;1307:4;1300:5;1296:16;1289:85;1129:256;757:635;;;;:::o;1398:395::-;;1526:2;1514:9;1505:7;1501:23;1497:32;1494:2;;;1542:1;1539;1532:12;1494:2;1613:1;1602:9;1598:17;1585:31;1643:18;1635:6;1632:30;1629:2;;;1675:1;1672;1665:12;1629:2;1703:73;1768:7;1759:6;1748:9;1744:22;1703:73;:::i;:::-;1693:83;;1556:230;1484:309;;;;:::o;1799:129::-;;1860:20;;:::i;:::-;1850:30;;1889:33;1917:4;1909:6;1889:33;:::i;:::-;1840:88;;;:::o;1934:75::-;;2000:2;1994:9;1984:19;;1974:35;:::o;2015:308::-;;2167:18;2159:6;2156:30;2153:2;;;2189:18;;:::i;:::-;2153:2;2227:29;2249:6;2227:29;:::i;:::-;2219:37;;2311:4;2305;2301:15;2293:23;;2082:241;;;:::o;2329:154::-;2413:6;2408:3;2403;2390:30;2475:1;2466:6;2461:3;2457:16;2450:27;2380:103;;;:::o;2489:320::-;;2570:1;2564:4;2560:12;2550:22;;2617:1;2611:4;2607:12;2638:18;2628:2;;2694:4;2686:6;2682:17;2672:27;;2628:2;2756;2748:6;2745:14;2725:18;2722:38;2719:2;;;2775:18;;:::i;:::-;2719:2;2540:269;;;;:::o;2815:281::-;2898:27;2920:4;2898:27;:::i;:::-;2890:6;2886:40;3028:6;3016:10;3013:22;2992:18;2980:10;2977:34;2974:62;2971:2;;;3039:18;;:::i;:::-;2971:2;3079:10;3075:2;3068:22;2858:238;;;:::o;3102:180::-;3150:77;3147:1;3140:88;3247:4;3244:1;3237:15;3271:4;3268:1;3261:15;3288:180;3336:77;3333:1;3326:88;3433:4;3430:1;3423:15;3457:4;3454:1;3447:15;3474:102;;3566:2;3562:7;3557:2;3550:5;3546:14;3542:28;3532:38;;3522:54;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "315400",
								"executionCost": "355",
								"totalCost": "315755"
							},
							"external": {
								"init((string,string))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 520,
									"end": 1149,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 520,
									"end": 1149,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220accaa162d03f5fd7106c56c2ae41db0376a01ee66ea18b78f1eef1ea708d426264736f6c63430008010033",
									".code": [
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "EDACBD3"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 520,
											"end": 1149,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 737,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 737,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 737,
											"end": 764,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 737,
											"end": 764,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 737,
											"end": 764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 698,
											"end": 764,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 698,
											"end": 764,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 805,
											"end": 807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 827,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 805,
											"end": 827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 805,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 854,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 805,
											"end": 854,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 805,
											"end": 854,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 854,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 805,
											"end": 854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 805,
											"end": 861,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 805,
											"end": 861,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 805,
											"end": 861,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 805,
											"end": 861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 871,
											"end": 873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 871,
											"end": 893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 923,
											"name": "PUSH",
											"source": 0,
											"value": "1F931C1C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 871,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 924,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 924,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 871,
											"end": 924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 871,
											"end": 924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 871,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 871,
											"end": 931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 871,
											"end": 931,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 871,
											"end": 931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 963,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 941,
											"end": 963,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "48E2B09300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 941,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 941,
											"end": 996,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 941,
											"end": 996,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 941,
											"end": 996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 996,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 941,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 941,
											"end": 1003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1065,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1013,
											"end": 1015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1035,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1013,
											"end": 1035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1061,
											"name": "PUSH",
											"source": 0,
											"value": "7F5828D000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1013,
											"end": 1069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1125,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1117,
											"end": 1125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 645,
											"end": 1147,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1767,
											"end": 1964,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1767,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1816,
											"end": 1841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1869,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 702,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C"
										},
										{
											"begin": 1853,
											"end": 1896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1853,
											"end": 1896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1948,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1948,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1958,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1958,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "22"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "25"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "25"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 352,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 7,
											"end": 352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7,
											"end": 352,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 168,
											"end": 174,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 126,
											"end": 175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 126,
											"end": 175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 110,
											"end": 176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 110,
											"end": 176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 101,
											"end": 176,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 101,
											"end": 176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 199,
											"end": 205,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 192,
											"end": 197,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 185,
											"end": 206,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 237,
											"end": 241,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 230,
											"end": 235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 226,
											"end": 242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 275,
											"end": 278,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 266,
											"end": 272,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 261,
											"end": 264,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 257,
											"end": 273,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 254,
											"end": 279,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 251,
											"end": 253,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 292,
											"end": 293,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 290,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 282,
											"end": 294,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 251,
											"end": 253,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 305,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 334,
											"end": 337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 329,
											"end": 332,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 305,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 305,
											"end": 346,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 91,
											"end": 352,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 91,
											"end": 352,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 91,
											"end": 352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 91,
											"end": 352,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 372,
											"end": 645,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 372,
											"end": 645,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 372,
											"end": 645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 480,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 470,
											"end": 474,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 462,
											"end": 468,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 458,
											"end": 475,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 454,
											"end": 481,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 444,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 444,
											"end": 446,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 495,
											"end": 496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 485,
											"end": 497,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 444,
											"end": 446,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 444,
											"end": 446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 542,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 635,
											"end": 638,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 627,
											"end": 633,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 620,
											"end": 624,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 618,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 608,
											"end": 625,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 560,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 560,
											"end": 639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 551,
											"end": 639,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 551,
											"end": 639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 434,
											"end": 645,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 434,
											"end": 645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 434,
											"end": 645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 434,
											"end": 645,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 682,
											"end": 1392,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 682,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 682,
											"end": 1392,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 799,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 783,
											"end": 792,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 778,
											"end": 781,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 774,
											"end": 793,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 770,
											"end": 800,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 767,
											"end": 769,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 767,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 767,
											"end": 769,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 803,
											"end": 815,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 767,
											"end": 769,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 767,
											"end": 769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 835,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 851,
											"end": 855,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 835,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 835,
											"end": 856,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 835,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 826,
											"end": 856,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 826,
											"end": 856,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 943,
											"end": 944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 928,
											"end": 945,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 915,
											"end": 946,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 973,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 965,
											"end": 971,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 962,
											"end": 992,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 959,
											"end": 961,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1005,
											"end": 1006,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 995,
											"end": 1007,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 959,
											"end": 961,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1103,
											"end": 1106,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1100,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1083,
											"end": 1092,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1079,
											"end": 1101,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1048,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1048,
											"end": 1107,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1048,
											"end": 1107,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 1048,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1041,
											"end": 1045,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1039,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1030,
											"end": 1046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1023,
											"end": 1108,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 866,
											"end": 1119,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1208,
											"end": 1210,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1197,
											"end": 1206,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1193,
											"end": 1211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1180,
											"end": 1212,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1257,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1228,
											"end": 1258,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1261,
											"end": 1273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1369,
											"end": 1372,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1360,
											"end": 1366,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1349,
											"end": 1358,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1345,
											"end": 1367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1314,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 1314,
											"end": 1373,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1314,
											"end": 1373,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1314,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1307,
											"end": 1311,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1305,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1296,
											"end": 1312,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1289,
											"end": 1374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 757,
											"end": 1392,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 757,
											"end": 1392,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 757,
											"end": 1392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 757,
											"end": 1392,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 757,
											"end": 1392,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1398,
											"end": 1793,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1398,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1398,
											"end": 1793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1514,
											"end": 1523,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1501,
											"end": 1524,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1497,
											"end": 1529,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1532,
											"end": 1544,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1494,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1611,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1616,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1643,
											"end": 1661,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1662,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1673,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1665,
											"end": 1677,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1768,
											"end": 1775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1757,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1703,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1703,
											"end": 1776,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1703,
											"end": 1776,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 1703,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1776,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1693,
											"end": 1776,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1556,
											"end": 1786,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1793,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1793,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1793,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1484,
											"end": 1793,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1799,
											"end": 1928,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 1799,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1799,
											"end": 1928,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1860,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1860,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1860,
											"end": 1880,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1880,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1860,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1880,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1850,
											"end": 1880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1917,
											"end": 1921,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1889,
											"end": 1922,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 1922,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 1889,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1928,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1840,
											"end": 1928,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1934,
											"end": 2009,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 1934,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1934,
											"end": 2009,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2002,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2003,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 2009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 2009,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2015,
											"end": 2323,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2015,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2015,
											"end": 2323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2156,
											"end": 2186,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2155,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2153,
											"end": 2155,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2153,
											"end": 2155,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 2153,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2249,
											"end": 2255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2227,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2256,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2256,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2311,
											"end": 2315,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2309,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2301,
											"end": 2316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2293,
											"end": 2316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2323,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2323,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2323,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2082,
											"end": 2323,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2329,
											"end": 2483,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2329,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2419,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2411,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2403,
											"end": 2406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2390,
											"end": 2420,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 2475,
											"end": 2476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2472,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2464,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2457,
											"end": 2473,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2450,
											"end": 2477,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2380,
											"end": 2483,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2489,
											"end": 2809,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 2489,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2564,
											"end": 2568,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2560,
											"end": 2572,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2550,
											"end": 2572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2617,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2611,
											"end": 2615,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2607,
											"end": 2619,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2638,
											"end": 2656,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2628,
											"end": 2630,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2699,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2699,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2628,
											"end": 2630,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 2628,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2756,
											"end": 2758,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2754,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2760,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2775,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2775,
											"end": 2793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 2775,
											"end": 2793,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2775,
											"end": 2793,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 2775,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 2719,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2809,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2809,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2809,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2540,
											"end": 2809,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2815,
											"end": 3096,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 2815,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2920,
											"end": 2924,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2898,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2898,
											"end": 2925,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2898,
											"end": 2925,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 2898,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2886,
											"end": 2926,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3028,
											"end": 3034,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3016,
											"end": 3026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3035,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2980,
											"end": 2990,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2977,
											"end": 3011,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2974,
											"end": 3036,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2971,
											"end": 2973,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2971,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2971,
											"end": 2973,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3039,
											"end": 3057,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2971,
											"end": 2973,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 2971,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3089,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2858,
											"end": 3096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2858,
											"end": 3096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2858,
											"end": 3096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2858,
											"end": 3096,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3102,
											"end": 3282,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 3102,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3150,
											"end": 3227,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3228,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3247,
											"end": 3251,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3244,
											"end": 3245,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3237,
											"end": 3252,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3271,
											"end": 3275,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3268,
											"end": 3269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3276,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3288,
											"end": 3468,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 3288,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3413,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3333,
											"end": 3334,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3414,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3433,
											"end": 3437,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3423,
											"end": 3438,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3462,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3474,
											"end": 3576,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 3474,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3474,
											"end": 3576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3562,
											"end": 3569,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3559,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3550,
											"end": 3555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3546,
											"end": 3560,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3542,
											"end": 3570,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3532,
											"end": 3570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3522,
											"end": 3576,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"init((string,string))": "0edacbd3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"internalType\":\"struct InitDiamond.Args\",\"name\":\"_args\",\"type\":\"tuple\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tmons/InitDiamond.sol\":\"InitDiamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tmons/InitDiamond.sol\":{\"keccak256\":\"0x02e802ef74bbddce5295350b913abecb6e5cfad35bc098e9182505374c4320d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://679aeda74937c60abb57433fa4a0d1487af7f794800662c7a3fc103a4e2523bd\",\"dweb:/ipfs/QmYoRQQq9GRTPUvZMVbQpE9DVAiz8NQ5TcakkKENVNQDZ3\"]},\"Tmons/libs/LibAppStorage.sol\":{\"keccak256\":\"0xe0153ca3e65c912bb0313b630e3e07af886f79af35db5c5b61f4171b77ddeb98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d26e5aa4ba6344a4bf78f9bc9d99ee1d2e24007363447334d16b9359e70350\",\"dweb:/ipfs/Qme8Li1VAsKfvMimcry8cGpBVfRfhLnuXGGuvMLxWkeP3Y\"]},\"shared/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xc4aeefa6292b5abe7eba8b384578feb47e50783b7517692aad04c2247b756bde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd3a08cad864086180c0cb315ceb1e711f93c348c411d0e95e4ad5b35000c9b\",\"dweb:/ipfs/QmdA2qKiP52wznEFqcYzaAqjBXBx8SVKaK72pN4gnB7udn\"]},\"shared/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0xbd6ed8e152b7bd811a46a8a5d198de96b1183bda3a25b310eac936446cf8ed59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://349fcce52a02e0e5261c23281a2ab1fdaa58b5fedd8134104cd2a8d670034721\",\"dweb:/ipfs/QmVHmyM8UBiozFLSQSRUX14ucAJT2NyDoRmF6WzfJ21jt6\"]},\"shared/interfaces/IERC165.sol\":{\"keccak256\":\"0xbc265d9fa3f709c064d3f0f3fba94d257705756057d8b04a5a1e46475baef6c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4062f914319697a497edea8f7e2e31a6a0dcdd67904afd96109795f91a97148\",\"dweb:/ipfs/QmRfn5ZxsZwVhM7GpdWoFYzHKKt8WBY9feSTTECQa11a1J\"]},\"shared/interfaces/IERC173.sol\":{\"keccak256\":\"0xb49768661cc835058fe4f5b5f0e71ff858f161023ec56e534b93b6b345011a51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e538ef572c6466d90114360ecff552b7b496c5bf8745a4b203e14e00d5fc9e7\",\"dweb:/ipfs/QmZZ9vScpE9NUUKC8MCtvL57krvjtZJhhmM1T499ZBMT7b\"]},\"shared/libs/LibDiamond.sol\":{\"keccak256\":\"0x9ad03eb166e9a0ca741433f7112e3a98ab88cc10a4174e5bc3cc61f338568dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aac7a4476568e23429c96c3ff46b05076c3e32865a9a71ea3aec5b0775aaf333\",\"dweb:/ipfs/QmUcCSaqJfNi5m6rZG7VHLQk6tFg479uZFZqiRnyoByLB3\"]},\"shared/libs/LibMeta.sol\":{\"keccak256\":\"0x4e9d27a97e9e588919a2247f1520dbd3953299bbccf8f83402de139490a54158\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c028d4bd357cd73013137dd4998499e9745ff32ddda314f1bf4a874aeec9e476\",\"dweb:/ipfs/QmRadPVfeb29AP9ZGAS5JCDvzWSHqRuy5riAzFBpkHKGr4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 18,
								"contract": "Tmons/InitDiamond.sol:InitDiamond",
								"label": "s",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(AppStorage)105_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AppStorage)105_storage": {
								"encoding": "inplace",
								"label": "struct AppStorage",
								"members": [
									{
										"astId": 102,
										"contract": "Tmons/InitDiamond.sol:InitDiamond",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 104,
										"contract": "Tmons/InitDiamond.sol:InitDiamond",
										"label": "symbol",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Tmons/libs/LibAppStorage.sol": {
				"LibAppStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Tmons/libs/LibAppStorage.sol\":117:389  library LibAppStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Tmons/libs/LibAppStorage.sol\":117:389  library LibAppStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122005194adab2ef083d08b97999617b8f997b47fa41191a0d0910f69f34695da47d64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122005194adab2ef083d08b97999617b8f997b47fa41191a0d0910f69f34695da47d64736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV NOT 0x4A 0xDA 0xB2 0xEF ADDMOD RETURNDATASIZE ADDMOD 0xB9 PUSH26 0x99617B8F997B47FA41191A0D0910F69F34695DA47D64736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "117:272:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122005194adab2ef083d08b97999617b8f997b47fa41191a0d0910f69f34695da47d64736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV NOT 0x4A 0xDA 0xB2 0xEF ADDMOD RETURNDATASIZE ADDMOD 0xB9 PUSH26 0x99617B8F997B47FA41191A0D0910F69F34695DA47D64736F6C63 NUMBER STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "117:272:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"diamondStorage()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 117,
									"end": 389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 117,
									"end": 389,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122005194adab2ef083d08b97999617b8f997b47fa41191a0d0910f69f34695da47d64736f6c63430008010033",
									".code": [
										{
											"begin": 117,
											"end": 389,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 117,
											"end": 389,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 117,
											"end": 389,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 117,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 117,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 117,
											"end": 389,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 117,
											"end": 389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 117,
											"end": 389,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 117,
											"end": 389,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Tmons/libs/LibAppStorage.sol\":\"LibAppStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Tmons/libs/LibAppStorage.sol\":{\"keccak256\":\"0xe0153ca3e65c912bb0313b630e3e07af886f79af35db5c5b61f4171b77ddeb98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d26e5aa4ba6344a4bf78f9bc9d99ee1d2e24007363447334d16b9359e70350\",\"dweb:/ipfs/Qme8Li1VAsKfvMimcry8cGpBVfRfhLnuXGGuvMLxWkeP3Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"shared/interfaces/IDiamondCut.sol": {
				"IDiamondCut": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondCut.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondCut.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondCut.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondCut.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"_calldata": "A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init",
									"_diamondCut": "Contains the facet addresses and function selectors",
									"_init": "The address of the contract or facet to execute _calldata"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"_calldata\":\"A function call, including function selector and arguments                  _calldata is executed with delegatecall on _init\",\"_diamondCut\":\"Contains the facet addresses and function selectors\",\"_init\":\"The address of the contract or facet to execute _calldata\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"Add/replace/remove any number of functions and optionally execute         a function with delegatecall\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shared/interfaces/IDiamondCut.sol\":\"IDiamondCut\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shared/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xc4aeefa6292b5abe7eba8b384578feb47e50783b7517692aad04c2247b756bde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd3a08cad864086180c0cb315ceb1e711f93c348c411d0e95e4ad5b35000c9b\",\"dweb:/ipfs/QmdA2qKiP52wznEFqcYzaAqjBXBx8SVKaK72pN4gnB7udn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "Add/replace/remove any number of functions and optionally execute         a function with delegatecall"
							}
						},
						"version": 1
					}
				}
			},
			"shared/interfaces/IDiamondLoupe.sol": {
				"IDiamondLoupe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_functionSelector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facetAddress_",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "facetAddresses_",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "facetFunctionSelectors_",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IDiamondLoupe.Facet[]",
									"name": "facets_",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"facetAddress(bytes4)": {
								"details": "If facet is not found return address(0).",
								"params": {
									"_functionSelector": "The function selector."
								},
								"returns": {
									"facetAddress_": "The facet address."
								}
							},
							"facetAddresses()": {
								"returns": {
									"facetAddresses_": "facetAddresses_"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"_facet": "The facet address."
								},
								"returns": {
									"facetFunctionSelectors_": "facetFunctionSelectors_"
								}
							},
							"facets()": {
								"returns": {
									"facets_": "Facet"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_functionSelector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facetAddress_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"facetAddresses_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"facetFunctionSelectors_\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IDiamondLoupe.Facet[]\",\"name\":\"facets_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"facetAddress(bytes4)\":{\"details\":\"If facet is not found return address(0).\",\"params\":{\"_functionSelector\":\"The function selector.\"},\"returns\":{\"facetAddress_\":\"The facet address.\"}},\"facetAddresses()\":{\"returns\":{\"facetAddresses_\":\"facetAddresses_\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"_facet\":\"The facet address.\"},\"returns\":{\"facetFunctionSelectors_\":\"facetFunctionSelectors_\"}},\"facets()\":{\"returns\":{\"facets_\":\"Facet\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"facetAddress(bytes4)\":{\"notice\":\"Gets the facet that supports the given selector.\"},\"facetAddresses()\":{\"notice\":\"Get all the facet addresses used by a diamond.\"},\"facetFunctionSelectors(address)\":{\"notice\":\"Gets all the function selectors supported by a specific facet.\"},\"facets()\":{\"notice\":\"Gets all facet addresses and their four byte function selectors.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shared/interfaces/IDiamondLoupe.sol\":\"IDiamondLoupe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shared/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0xbd6ed8e152b7bd811a46a8a5d198de96b1183bda3a25b310eac936446cf8ed59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://349fcce52a02e0e5261c23281a2ab1fdaa58b5fedd8134104cd2a8d670034721\",\"dweb:/ipfs/QmVHmyM8UBiozFLSQSRUX14ucAJT2NyDoRmF6WzfJ21jt6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"facetAddress(bytes4)": {
								"notice": "Gets the facet that supports the given selector."
							},
							"facetAddresses()": {
								"notice": "Get all the facet addresses used by a diamond."
							},
							"facetFunctionSelectors(address)": {
								"notice": "Gets all the function selectors supported by a specific facet."
							},
							"facets()": {
								"notice": "Gets all facet addresses and their four byte function selectors."
							}
						},
						"version": 1
					}
				}
			},
			"shared/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.",
								"params": {
									"interfaceId": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function  uses less than 30,000 gas.\",\"params\":{\"interfaceId\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `interfaceID` and  `interfaceID` is not 0xffffffff, `false` otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shared/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shared/interfaces/IERC165.sol\":{\"keccak256\":\"0xbc265d9fa3f709c064d3f0f3fba94d257705756057d8b04a5a1e46475baef6c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4062f914319697a497edea8f7e2e31a6a0dcdd67904afd96109795f91a97148\",\"dweb:/ipfs/QmRfn5ZxsZwVhM7GpdWoFYzHKKt8WBY9feSTTECQa11a1J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"shared/interfaces/IERC173.sol": {
				"IERC173": {
					"abi": [
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"owner_": "The address of the owner."
								}
							},
							"transferOwnership(address)": {
								"details": "Set _newOwner to address(0) to renounce any ownership.",
								"params": {
									"_newOwner": "The address of the new owner of the contract"
								}
							}
						},
						"title": "ERC-173 Contract Ownership Standard  Note: the ERC-165 identifier for this interface is 0x7f5828d0",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"owner_\":\"The address of the owner.\"}},\"transferOwnership(address)\":{\"details\":\"Set _newOwner to address(0) to renounce any ownership.\",\"params\":{\"_newOwner\":\"The address of the new owner of the contract\"}}},\"title\":\"ERC-173 Contract Ownership Standard  Note: the ERC-165 identifier for this interface is 0x7f5828d0\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"Get the address of the owner\"},\"transferOwnership(address)\":{\"notice\":\"Set the address of the new owner of the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shared/interfaces/IERC173.sol\":\"IERC173\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shared/interfaces/IERC173.sol\":{\"keccak256\":\"0xb49768661cc835058fe4f5b5f0e71ff858f161023ec56e534b93b6b345011a51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e538ef572c6466d90114360ecff552b7b496c5bf8745a4b203e14e00d5fc9e7\",\"dweb:/ipfs/QmZZ9vScpE9NUUKC8MCtvL57krvjtZJhhmM1T499ZBMT7b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "Get the address of the owner"
							},
							"transferOwnership(address)": {
								"notice": "Set the address of the new owner of the contract"
							}
						},
						"version": 1
					}
				}
			},
			"shared/libs/LibDiamond.sol": {
				"LibDiamond": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamondCut.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "functionSelectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamondCut.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"shared/libs/LibDiamond.sol\":633:12558  library LibDiamond {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"shared/libs/LibDiamond.sol\":633:12558  library LibDiamond {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fb043e5079308d3cc79db7253cdec6d219685320aac3d3666514737d5d90897464736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb043e5079308d3cc79db7253cdec6d219685320aac3d3666514737d5d90897464736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB DIV RETURNDATACOPY POP PUSH26 0x308D3CC79DB7253CDEC6D219685320AAC3D3666514737D5D9089 PUSH21 0x64736F6C6343000801003300000000000000000000 ",
							"sourceMap": "633:11925:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fb043e5079308d3cc79db7253cdec6d219685320aac3d3666514737d5d90897464736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB DIV RETURNDATACOPY POP PUSH26 0x308D3CC79DB7253CDEC6D219685320AAC3D3666514737D5D9089 PUSH21 0x64736F6C6343000801003300000000000000000000 ",
							"sourceMap": "633:11925:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addDiamondFunctions(address,address,address)": "infinite",
								"addFunctions(address,bytes4[] memory)": "infinite",
								"contractOwner()": "infinite",
								"diamondCut(struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)": "infinite",
								"diamondStorage()": "infinite",
								"enforceHasContractCode(address,string memory)": "infinite",
								"enforceIsContractOwner()": "infinite",
								"initializeDiamondCut(address,bytes memory)": "infinite",
								"removeFunction(address,bytes4)": "infinite",
								"removeFunctions(address,bytes4[] memory)": "infinite",
								"replaceFunctions(address,bytes4[] memory)": "infinite",
								"setContractOwner(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 633,
									"end": 12558,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fb043e5079308d3cc79db7253cdec6d219685320aac3d3666514737d5d90897464736f6c63430008010033",
									".code": [
										{
											"begin": 633,
											"end": 12558,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 633,
											"end": 12558,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 633,
											"end": 12558,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 633,
											"end": 12558,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 633,
											"end": 12558,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 12558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 633,
											"end": 12558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 12558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 633,
											"end": 12558,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamondCut.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"functionSelectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IDiamondCut.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shared/libs/LibDiamond.sol\":\"LibDiamond\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shared/interfaces/IDiamondCut.sol\":{\"keccak256\":\"0xc4aeefa6292b5abe7eba8b384578feb47e50783b7517692aad04c2247b756bde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd3a08cad864086180c0cb315ceb1e711f93c348c411d0e95e4ad5b35000c9b\",\"dweb:/ipfs/QmdA2qKiP52wznEFqcYzaAqjBXBx8SVKaK72pN4gnB7udn\"]},\"shared/interfaces/IDiamondLoupe.sol\":{\"keccak256\":\"0xbd6ed8e152b7bd811a46a8a5d198de96b1183bda3a25b310eac936446cf8ed59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://349fcce52a02e0e5261c23281a2ab1fdaa58b5fedd8134104cd2a8d670034721\",\"dweb:/ipfs/QmVHmyM8UBiozFLSQSRUX14ucAJT2NyDoRmF6WzfJ21jt6\"]},\"shared/interfaces/IERC165.sol\":{\"keccak256\":\"0xbc265d9fa3f709c064d3f0f3fba94d257705756057d8b04a5a1e46475baef6c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4062f914319697a497edea8f7e2e31a6a0dcdd67904afd96109795f91a97148\",\"dweb:/ipfs/QmRfn5ZxsZwVhM7GpdWoFYzHKKt8WBY9feSTTECQa11a1J\"]},\"shared/interfaces/IERC173.sol\":{\"keccak256\":\"0xb49768661cc835058fe4f5b5f0e71ff858f161023ec56e534b93b6b345011a51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e538ef572c6466d90114360ecff552b7b496c5bf8745a4b203e14e00d5fc9e7\",\"dweb:/ipfs/QmZZ9vScpE9NUUKC8MCtvL57krvjtZJhhmM1T499ZBMT7b\"]},\"shared/libs/LibDiamond.sol\":{\"keccak256\":\"0x9ad03eb166e9a0ca741433f7112e3a98ab88cc10a4174e5bc3cc61f338568dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aac7a4476568e23429c96c3ff46b05076c3e32865a9a71ea3aec5b0775aaf333\",\"dweb:/ipfs/QmUcCSaqJfNi5m6rZG7VHLQk6tFg479uZFZqiRnyoByLB3\"]},\"shared/libs/LibMeta.sol\":{\"keccak256\":\"0x4e9d27a97e9e588919a2247f1520dbd3953299bbccf8f83402de139490a54158\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c028d4bd357cd73013137dd4998499e9745ff32ddda314f1bf4a874aeec9e476\",\"dweb:/ipfs/QmRadPVfeb29AP9ZGAS5JCDvzWSHqRuy5riAzFBpkHKGr4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"shared/libs/LibMeta.sol": {
				"LibMeta": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"shared/libs/LibMeta.sol\":56:1186  library LibMeta {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"shared/libs/LibMeta.sol\":56:1186  library LibMeta {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093e3a96e9ab9c7b644b712280188fd0a72812d54d3e2e77497969a794665477464736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093e3a96e9ab9c7b644b712280188fd0a72812d54d3e2e77497969a794665477464736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xE3 0xA9 PUSH15 0x9AB9C7B644B712280188FD0A72812D SLOAD 0xD3 0xE2 0xE7 PUSH21 0x97969A794665477464736F6C634300080100330000 ",
							"sourceMap": "56:1130:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093e3a96e9ab9c7b644b712280188fd0a72812d54d3e2e77497969a794665477464736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xE3 0xA9 PUSH15 0x9AB9C7B644B712280188FD0A72812D SLOAD 0xD3 0xE2 0xE7 PUSH21 0x97969A794665477464736F6C634300080100330000 ",
							"sourceMap": "56:1130:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"domainSeparator(string memory,string memory)": "infinite",
								"getChainID()": "infinite",
								"msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 56,
									"end": 1186,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093e3a96e9ab9c7b644b712280188fd0a72812d54d3e2e77497969a794665477464736f6c63430008010033",
									".code": [
										{
											"begin": 56,
											"end": 1186,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 56,
											"end": 1186,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 56,
											"end": 1186,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 56,
											"end": 1186,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 56,
											"end": 1186,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 56,
											"end": 1186,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 56,
											"end": 1186,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 1186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 56,
											"end": 1186,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"shared/libs/LibMeta.sol\":\"LibMeta\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"shared/libs/LibMeta.sol\":{\"keccak256\":\"0x4e9d27a97e9e588919a2247f1520dbd3953299bbccf8f83402de139490a54158\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c028d4bd357cd73013137dd4998499e9745ff32ddda314f1bf4a874aeec9e476\",\"dweb:/ipfs/QmRadPVfeb29AP9ZGAS5JCDvzWSHqRuy5riAzFBpkHKGr4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Tmons/InitDiamond.sol": {
				"ast": {
					"absolutePath": "Tmons/InitDiamond.sol",
					"exportedSymbols": {
						"AppStorage": [
							105
						],
						"IDiamondCut": [
							171
						],
						"IDiamondLoupe": [
							212
						],
						"IERC165": [
							223
						],
						"IERC173": [
							239
						],
						"InitDiamond": [
							98
						],
						"LibDiamond": [
							1261
						],
						"LibMeta": [
							1349
						]
					},
					"id": 99,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "Tmons/libs/LibAppStorage.sol",
							"file": "./libs/LibAppStorage.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 134,
							"src": "56:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "AppStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "64:10:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/libs/LibMeta.sol",
							"file": "../shared/libs/LibMeta.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 1350,
							"src": "109:51:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "LibMeta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "117:7:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/libs/LibDiamond.sol",
							"file": "../shared/libs/LibDiamond.sol",
							"id": 7,
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 1262,
							"src": "161:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "LibDiamond",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "169:10:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/interfaces/IDiamondCut.sol",
							"file": "../shared/interfaces/IDiamondCut.sol",
							"id": 9,
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 172,
							"src": "219:65:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IDiamondCut",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "227:11:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/interfaces/IERC165.sol",
							"file": "../shared/interfaces/IERC165.sol",
							"id": 11,
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 224,
							"src": "285:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 10,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "293:7:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/interfaces/IDiamondLoupe.sol",
							"file": "../shared/interfaces/IDiamondLoupe.sol",
							"id": 13,
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 213,
							"src": "343:69:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 12,
										"name": "IDiamondLoupe",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "351:13:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/interfaces/IERC173.sol",
							"file": "../shared/interfaces/IERC173.sol",
							"id": 15,
							"nodeType": "ImportDirective",
							"scope": 99,
							"sourceUnit": 240,
							"src": "413:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 14,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "421:7:0",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 98,
							"linearizedBaseContracts": [
								98
							],
							"name": "InitDiamond",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 18,
									"mutability": "mutable",
									"name": "s",
									"nodeType": "VariableDeclaration",
									"scope": 98,
									"src": "547:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AppStorage_$105_storage",
										"typeString": "struct AppStorage"
									},
									"typeName": {
										"id": 17,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 16,
											"name": "AppStorage",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 105,
											"src": "547:10:0"
										},
										"referencedDeclaration": 105,
										"src": "547:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AppStorage_$105_storage_ptr",
											"typeString": "struct AppStorage"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "InitDiamond.Args",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "597:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 19,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "597:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "symbol",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "618:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 21,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "618:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Args",
									"nodeType": "StructDefinition",
									"scope": 98,
									"src": "575:64:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "687:460:0",
										"statements": [
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"mutability": "mutable",
														"name": "ds",
														"nodeType": "VariableDeclaration",
														"scope": 96,
														"src": "698:36:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 32,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 31,
																"name": "LibDiamond.DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 287,
																"src": "698:25:0"
															},
															"referencedDeclaration": 287,
															"src": "698:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 34,
															"name": "LibDiamond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "737:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibDiamond_$1261_$",
																"typeString": "type(library LibDiamond)"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "diamondStorage",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 299,
														"src": "737:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$287_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "737:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "698:66:0"
											},
											{
												"expression": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 38,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "805:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																	"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportedInterfaces",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 284,
															"src": "805:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 45,
														"indexExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 41,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "833:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$223_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$223_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 40,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "828:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "828:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$223",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "828:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "805:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "857:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "805:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "805:56:0"
											},
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 49,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "871:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																	"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportedInterfaces",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 284,
															"src": "871:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 56,
														"indexExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IDiamondCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "899:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																			"typeString": "type(contract IDiamondCut)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																			"typeString": "type(contract IDiamondCut)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "894:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "894:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDiamondCut_$171",
																	"typeString": "type(contract IDiamondCut)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "894:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "871:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "927:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "871:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "871:60:0"
											},
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 60,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "941:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																	"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportedInterfaces",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 284,
															"src": "941:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 67,
														"indexExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 63,
																		"name": "IDiamondLoupe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 212,
																		"src": "969:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$212_$",
																			"typeString": "type(contract IDiamondLoupe)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$212_$",
																			"typeString": "type(contract IDiamondLoupe)"
																		}
																	],
																	"id": 62,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "964:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "964:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDiamondLoupe_$212",
																	"typeString": "type(contract IDiamondLoupe)"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "964:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "941:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "999:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "941:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "941:62:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 71,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "1013:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																	"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																}
															},
															"id": 77,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportedInterfaces",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 284,
															"src": "1013:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 78,
														"indexExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 74,
																		"name": "IERC173",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 239,
																		"src": "1041:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC173_$239_$",
																			"typeString": "type(contract IERC173)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC173_$239_$",
																			"typeString": "type(contract IERC173)"
																		}
																	],
																	"id": 73,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1036:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1036:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC173_$239",
																	"typeString": "type(contract IERC173)"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1036:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1013:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1065:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1013:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "1013:56:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 82,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1088:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AppStorage_$105_storage",
																"typeString": "struct AppStorage storage ref"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 102,
														"src": "1088:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 85,
															"name": "_args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1097:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Args_$23_memory_ptr",
																"typeString": "struct InitDiamond.Args memory"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "1097:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1088:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1088:19:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 89,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1117:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AppStorage_$105_storage",
																"typeString": "struct AppStorage storage ref"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "1117:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 92,
															"name": "_args",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1128:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Args_$23_memory_ptr",
																"typeString": "struct InitDiamond.Args memory"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "1128:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1117:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1117:23:0"
											}
										]
									},
									"functionSelector": "0edacbd3",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_args",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "659:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Args_$23_memory_ptr",
													"typeString": "struct InitDiamond.Args"
												},
												"typeName": {
													"id": 25,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 24,
														"name": "Args",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 23,
														"src": "659:4:0"
													},
													"referencedDeclaration": 23,
													"src": "659:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Args_$23_storage_ptr",
														"typeString": "struct InitDiamond.Args"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:19:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "687:0:0"
									},
									"scope": 98,
									"src": "645:502:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 99,
							"src": "520:629:0"
						}
					],
					"src": "32:1117:0"
				},
				"id": 0
			},
			"Tmons/libs/LibAppStorage.sol": {
				"ast": {
					"absolutePath": "Tmons/libs/LibAppStorage.sol",
					"exportedSymbols": {
						"AppStorage": [
							105
						],
						"LibAppStorage": [
							133
						]
					},
					"id": 134,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 100,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:1"
						},
						{
							"canonicalName": "AppStorage",
							"id": 105,
							"members": [
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 105,
									"src": "82:11:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 101,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "82:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 104,
									"mutability": "mutable",
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 105,
									"src": "99:13:1",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 103,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "99:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "AppStorage",
							"nodeType": "StructDefinition",
							"scope": 134,
							"src": "58:57:1",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 133,
							"linearizedBaseContracts": [
								133
							],
							"name": "LibAppStorage",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "217:61:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "236:36:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "250:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "261:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ds.slot",
																	"nodeType": "YulIdentifier",
																	"src": "250:7:1"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 109,
														"isOffset": false,
														"isSlot": true,
														"src": "250:7:1",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 111,
												"nodeType": "InlineAssembly",
												"src": "227:45:1"
											}
										]
									},
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondStorage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "168:2:1"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "ds",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "194:21:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AppStorage_$105_storage_ptr",
													"typeString": "struct AppStorage"
												},
												"typeName": {
													"id": 108,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 107,
														"name": "AppStorage",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 105,
														"src": "194:10:1"
													},
													"referencedDeclaration": 105,
													"src": "194:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AppStorage_$105_storage_ptr",
														"typeString": "struct AppStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "193:23:1"
									},
									"scope": 133,
									"src": "145:133:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "339:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 122,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "364:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "369:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "364:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "377:2:1",
																"subExpression": {
																	"id": 126,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "378:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "364:15:1",
															"trueExpression": {
																"id": 125,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "373:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "356:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "356:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "356:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 119,
												"id": 130,
												"nodeType": "Return",
												"src": "349:31:1"
											}
										]
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "297:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 114,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "297:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "296:10:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "330:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "329:9:1"
									},
									"scope": 133,
									"src": "284:103:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 134,
							"src": "117:272:1"
						}
					],
					"src": "32:357:1"
				},
				"id": 1
			},
			"shared/interfaces/IDiamondCut.sol": {
				"ast": {
					"absolutePath": "shared/interfaces/IDiamondCut.sol",
					"exportedSymbols": {
						"IDiamondCut": [
							171
						]
					},
					"id": 172,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 135,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 171,
							"linearizedBaseContracts": [
								171
							],
							"name": "IDiamondCut",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDiamondCut.FacetCutAction",
									"id": 139,
									"members": [
										{
											"id": 136,
											"name": "Add",
											"nodeType": "EnumValue",
											"src": "349:3:2"
										},
										{
											"id": 137,
											"name": "Replace",
											"nodeType": "EnumValue",
											"src": "354:7:2"
										},
										{
											"id": 138,
											"name": "Remove",
											"nodeType": "EnumValue",
											"src": "363:6:2"
										}
									],
									"name": "FacetCutAction",
									"nodeType": "EnumDefinition",
									"src": "328:42:2"
								},
								{
									"canonicalName": "IDiamondCut.FacetCut",
									"id": 148,
									"members": [
										{
											"constant": false,
											"id": 141,
											"mutability": "mutable",
											"name": "facetAddress",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "402:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 140,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "402:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 144,
											"mutability": "mutable",
											"name": "action",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "432:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_FacetCutAction_$139",
												"typeString": "enum IDiamondCut.FacetCutAction"
											},
											"typeName": {
												"id": 143,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 142,
													"name": "FacetCutAction",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 139,
													"src": "432:14:2"
												},
												"referencedDeclaration": 139,
												"src": "432:14:2",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FacetCutAction_$139",
													"typeString": "enum IDiamondCut.FacetCutAction"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 147,
											"mutability": "mutable",
											"name": "functionSelectors",
											"nodeType": "VariableDeclaration",
											"scope": 148,
											"src": "463:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 145,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "463:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 146,
												"nodeType": "ArrayTypeName",
												"src": "463:8:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetCut",
									"nodeType": "StructDefinition",
									"scope": 171,
									"src": "376:120:2",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "502:438:2",
										"text": "@notice Add/replace/remove any number of functions and optionally execute\n         a function with delegatecall\n @param _diamondCut Contains the facet addresses and function selectors\n @param _init The address of the contract or facet to execute _calldata\n @param _calldata A function call, including function selector and arguments\n                  _calldata is executed with delegatecall on _init"
									},
									"functionSelector": "1f931c1c",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "974:31:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 151,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 150,
															"name": "FacetCut",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 148,
															"src": "974:8:2"
														},
														"referencedDeclaration": 148,
														"src": "974:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 152,
													"nodeType": "ArrayTypeName",
													"src": "974:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "_init",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1015:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "_calldata",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "1038:24:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1038:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "964:104:2"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:0:2"
									},
									"scope": 171,
									"src": "945:133:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 170,
									"name": "DiamondCut",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1101:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 162,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 161,
															"name": "FacetCut",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 148,
															"src": "1101:8:2"
														},
														"referencedDeclaration": 148,
														"src": "1101:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 163,
													"nodeType": "ArrayTypeName",
													"src": "1101:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "_init",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1125:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": false,
												"mutability": "mutable",
												"name": "_calldata",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1140:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1140:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1100:56:2"
									},
									"src": "1084:73:2"
								}
							],
							"scope": 172,
							"src": "300:859:2"
						}
					],
					"src": "32:1127:2"
				},
				"id": 2
			},
			"shared/interfaces/IDiamondLoupe.sol": {
				"ast": {
					"absolutePath": "shared/interfaces/IDiamondLoupe.sol",
					"exportedSymbols": {
						"IDiamondLoupe": [
							212
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 173,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "IDiamondLoupe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDiamondLoupe.Facet",
									"id": 179,
									"members": [
										{
											"constant": false,
											"id": 175,
											"mutability": "mutable",
											"name": "facetAddress",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "290:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "290:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "functionSelectors",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "320:26:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 176,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "320:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 177,
												"nodeType": "ArrayTypeName",
												"src": "320:8:3",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Facet",
									"nodeType": "StructDefinition",
									"scope": 212,
									"src": "267:86:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "359:106:3",
										"text": "@notice Gets all facet addresses and their four byte function selectors.\n @return facets_ Facet"
									},
									"functionSelector": "7a0ed627",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facets",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:3"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "facets_",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "511:22:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Facet_$179_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondLoupe.Facet[]"
												},
												"typeName": {
													"baseType": {
														"id": 183,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 182,
															"name": "Facet",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 179,
															"src": "511:5:3"
														},
														"referencedDeclaration": 179,
														"src": "511:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Facet_$179_storage_ptr",
															"typeString": "struct IDiamondLoupe.Facet"
														}
													},
													"id": 184,
													"nodeType": "ArrayTypeName",
													"src": "511:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$179_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondLoupe.Facet[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:24:3"
									},
									"scope": 212,
									"src": "470:65:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "541:155:3",
										"text": "@notice Gets all the function selectors supported by a specific facet.\n @param _facet The facet address.\n @return facetFunctionSelectors_"
									},
									"functionSelector": "adfca15e",
									"id": 196,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetFunctionSelectors",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_facet",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "733:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:16:3"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "facetFunctionSelectors_",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "772:39:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 192,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "772:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 193,
													"nodeType": "ArrayTypeName",
													"src": "772:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "771:41:3"
									},
									"scope": 212,
									"src": "701:112:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "819:90:3",
										"text": "@notice Get all the facet addresses used by a diamond.\n @return facetAddresses_"
									},
									"functionSelector": "52ef6b2c",
									"id": 203,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddresses",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:3"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "facetAddresses_",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "963:32:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 199,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "963:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 200,
													"nodeType": "ArrayTypeName",
													"src": "963:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:34:3"
									},
									"scope": 212,
									"src": "914:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "1003:219:3",
										"text": "@notice Gets the facet that supports the given selector.\n @dev If facet is not found return address(0).\n @param _functionSelector The function selector.\n @return facetAddress_ The facet address."
									},
									"functionSelector": "cdffacc6",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "_functionSelector",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1249:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 205,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1249:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:26:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "facetAddress_",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1298:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:23:3"
									},
									"scope": 212,
									"src": "1227:94:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 213,
							"src": "157:1166:3"
						}
					],
					"src": "32:1291:3"
				},
				"id": 3
			},
			"shared/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "shared/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							223
						]
					},
					"id": 224,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 223,
							"linearizedBaseContracts": [
								223
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "80:373:4",
										"text": "@notice Query if a contract implements an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @dev Interface identification is specified in ERC-165. This function\n  uses less than 30,000 gas.\n @return `true` if the contract implements `interfaceID` and\n  `interfaceID` is not 0xffffffff, `false` otherwise"
									},
									"functionSelector": "01ffc9a7",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "485:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 216,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "485:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:20:4"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "528:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "528:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "527:6:4"
									},
									"scope": 223,
									"src": "458:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 224,
							"src": "56:480:4"
						}
					],
					"src": "32:504:4"
				},
				"id": 4
			},
			"shared/interfaces/IERC173.sol": {
				"ast": {
					"absolutePath": "shared/interfaces/IERC173.sol",
					"exportedSymbols": {
						"IERC173": [
							239
						]
					},
					"id": 240,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 225,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "56:114:5",
								"text": "@title ERC-173 Contract Ownership Standard\n  Note: the ERC-165 identifier for this interface is 0x7f5828d0"
							},
							"fullyImplemented": false,
							"id": 239,
							"linearizedBaseContracts": [
								239
							],
							"name": "IERC173",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "210:89:5",
										"text": "@notice Get the address of the owner\n @return owner_ The address of the owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "318:2:5"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "owner_",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "344:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "343:16:5"
									},
									"scope": 239,
									"src": "304:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "366:198:5",
										"text": "@notice Set the address of the new owner of the contract\n @dev Set _newOwner to address(0) to renounce any ownership.\n @param _newOwner The address of the new owner of the contract"
									},
									"functionSelector": "f2fde38b",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "596:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:19:5"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:5"
									},
									"scope": 239,
									"src": "569:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 240,
							"src": "186:440:5"
						}
					],
					"src": "32:594:5"
				},
				"id": 5
			},
			"shared/libs/LibDiamond.sol": {
				"ast": {
					"absolutePath": "shared/libs/LibDiamond.sol",
					"exportedSymbols": {
						"IDiamondCut": [
							171
						],
						"IDiamondLoupe": [
							212
						],
						"IERC165": [
							223
						],
						"IERC173": [
							239
						],
						"LibDiamond": [
							1261
						],
						"LibMeta": [
							1349
						]
					},
					"id": 1262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 241,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:6"
						},
						{
							"absolutePath": "shared/interfaces/IDiamondCut.sol",
							"file": "../interfaces/IDiamondCut.sol",
							"id": 243,
							"nodeType": "ImportDirective",
							"scope": 1262,
							"sourceUnit": 172,
							"src": "369:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 242,
										"name": "IDiamondCut",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "377:11:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/interfaces/IDiamondLoupe.sol",
							"file": "../interfaces/IDiamondLoupe.sol",
							"id": 245,
							"nodeType": "ImportDirective",
							"scope": 1262,
							"sourceUnit": 213,
							"src": "428:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 244,
										"name": "IDiamondLoupe",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "436:13:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/interfaces/IERC165.sol",
							"file": "../interfaces/IERC165.sol",
							"id": 247,
							"nodeType": "ImportDirective",
							"scope": 1262,
							"sourceUnit": 224,
							"src": "491:50:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 246,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "499:7:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/interfaces/IERC173.sol",
							"file": "../interfaces/IERC173.sol",
							"id": 249,
							"nodeType": "ImportDirective",
							"scope": 1262,
							"sourceUnit": 240,
							"src": "542:50:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 248,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "550:7:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "shared/libs/LibMeta.sol",
							"file": "./LibMeta.sol",
							"id": 251,
							"nodeType": "ImportDirective",
							"scope": 1262,
							"sourceUnit": 1350,
							"src": "593:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 250,
										"name": "LibMeta",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "601:7:6",
										"typeDescriptions": {}
									}
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1261,
							"linearizedBaseContracts": [
								1261
							],
							"name": "LibDiamond",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 256,
									"mutability": "constant",
									"name": "DIAMOND_STORAGE_POSITION",
									"nodeType": "VariableDeclaration",
									"scope": 1261,
									"src": "658:89:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 252,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6469616d6f6e642e7374616e646172642e6469616d6f6e642e73746f72616765",
												"id": 254,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "712:34:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
													"typeString": "literal_string \"diamond.standard.diamond.storage\""
												},
												"value": "diamond.standard.diamond.storage"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
													"typeString": "literal_string \"diamond.standard.diamond.storage\""
												}
											],
											"id": 253,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "702:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 255,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "702:45:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LibDiamond.FacetAddressAndPosition",
									"id": 261,
									"members": [
										{
											"constant": false,
											"id": 258,
											"mutability": "mutable",
											"name": "facetAddress",
											"nodeType": "VariableDeclaration",
											"scope": 261,
											"src": "795:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 257,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "795:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 260,
											"mutability": "mutable",
											"name": "functionSelectorPosition",
											"nodeType": "VariableDeclaration",
											"scope": 261,
											"src": "825:31:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 259,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "825:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetAddressAndPosition",
									"nodeType": "StructDefinition",
									"scope": 1261,
									"src": "754:171:6",
									"visibility": "public"
								},
								{
									"canonicalName": "LibDiamond.FacetFunctionSelectors",
									"id": 267,
									"members": [
										{
											"constant": false,
											"id": 264,
											"mutability": "mutable",
											"name": "functionSelectors",
											"nodeType": "VariableDeclaration",
											"scope": 267,
											"src": "971:26:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 262,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "971:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 263,
												"nodeType": "ArrayTypeName",
												"src": "971:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 266,
											"mutability": "mutable",
											"name": "facetAddressPosition",
											"nodeType": "VariableDeclaration",
											"scope": 267,
											"src": "1007:27:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 265,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "1007:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetFunctionSelectors",
									"nodeType": "StructDefinition",
									"scope": 1261,
									"src": "931:162:6",
									"visibility": "public"
								},
								{
									"canonicalName": "LibDiamond.DiamondStorage",
									"id": 287,
									"members": [
										{
											"constant": false,
											"id": 272,
											"mutability": "mutable",
											"name": "selectorToFacetAndPosition",
											"nodeType": "VariableDeclaration",
											"scope": 287,
											"src": "1276:69:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
												"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition)"
											},
											"typeName": {
												"id": 271,
												"keyType": {
													"id": 268,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1284:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "1276:42:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
													"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition)"
												},
												"valueType": {
													"id": 270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 269,
														"name": "FacetAddressAndPosition",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 261,
														"src": "1294:23:6"
													},
													"referencedDeclaration": 261,
													"src": "1294:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage_ptr",
														"typeString": "struct LibDiamond.FacetAddressAndPosition"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 277,
											"mutability": "mutable",
											"name": "facetFunctionSelectors",
											"nodeType": "VariableDeclaration",
											"scope": 287,
											"src": "1409:65:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
												"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors)"
											},
											"typeName": {
												"id": 276,
												"keyType": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1409:42:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
													"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors)"
												},
												"valueType": {
													"id": 275,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 274,
														"name": "FacetFunctionSelectors",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 267,
														"src": "1428:22:6"
													},
													"referencedDeclaration": 267,
													"src": "1428:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage_ptr",
														"typeString": "struct LibDiamond.FacetFunctionSelectors"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 280,
											"mutability": "mutable",
											"name": "facetAddresses",
											"nodeType": "VariableDeclaration",
											"scope": 287,
											"src": "1511:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 279,
												"nodeType": "ArrayTypeName",
												"src": "1511:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "supportedInterfaces",
											"nodeType": "VariableDeclaration",
											"scope": 287,
											"src": "1647:43:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
												"typeString": "mapping(bytes4 => bool)"
											},
											"typeName": {
												"id": 283,
												"keyType": {
													"id": 281,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1655:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "1647:23:6",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
													"typeString": "mapping(bytes4 => bool)"
												},
												"valueType": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1665:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "contractOwner",
											"nodeType": "VariableDeclaration",
											"scope": 287,
											"src": "1733:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 285,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1733:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondStorage",
									"nodeType": "StructDefinition",
									"scope": 1261,
									"src": "1099:662:6",
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1843:121:6",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "position",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "1853:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 293,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1853:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 296,
												"initialValue": {
													"id": 295,
													"name": "DIAMOND_STORAGE_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 256,
													"src": "1872:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1853:43:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1915:43:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1929:19:6",
															"value": {
																"name": "position",
																"nodeType": "YulIdentifier",
																"src": "1940:8:6"
															},
															"variableNames": [
																{
																	"name": "ds.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1929:7:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 291,
														"isOffset": false,
														"isSlot": true,
														"src": "1929:7:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 294,
														"isOffset": false,
														"isSlot": false,
														"src": "1940:8:6",
														"valueSize": 1
													}
												],
												"id": 297,
												"nodeType": "InlineAssembly",
												"src": "1906:52:6"
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondStorage",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1790:2:6"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "ds",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1816:25:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
													"typeString": "struct LibDiamond.DiamondStorage"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "DiamondStorage",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 287,
														"src": "1816:14:6"
													},
													"referencedDeclaration": 287,
													"src": "1816:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1815:27:6"
									},
									"scope": 1261,
									"src": "1767:197:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 305,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1997:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2028:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:57:6"
									},
									"src": "1970:84:6"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "2114:210:6",
										"statements": [
											{
												"assignments": [
													312
												],
												"declarations": [
													{
														"constant": false,
														"id": 312,
														"mutability": "mutable",
														"name": "ds",
														"nodeType": "VariableDeclaration",
														"scope": 332,
														"src": "2124:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 311,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 310,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 287,
																"src": "2124:14:6"
															},
															"referencedDeclaration": 287,
															"src": "2124:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2152:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$287_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2124:44:6"
											},
											{
												"assignments": [
													317
												],
												"declarations": [
													{
														"constant": false,
														"id": 317,
														"mutability": "mutable",
														"name": "previousOwner",
														"nodeType": "VariableDeclaration",
														"scope": 332,
														"src": "2178:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 316,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2178:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 320,
												"initialValue": {
													"expression": {
														"id": 318,
														"name": "ds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 312,
														"src": "2202:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage storage pointer"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "contractOwner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 286,
													"src": "2202:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2178:40:6"
											},
											{
												"expression": {
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 321,
															"name": "ds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2228:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "contractOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 286,
														"src": "2228:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 324,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2247:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2228:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2228:28:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 328,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "2292:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "2307:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 327,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "2271:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2271:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "EmitStatement",
												"src": "2266:51:6"
											}
										]
									},
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setContractOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "2086:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:19:6"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2114:0:6"
									},
									"scope": 1261,
									"src": "2060:264:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2402:64:6",
										"statements": [
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 338,
														"name": "contractOwner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 336,
														"src": "2412:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 339,
																"name": "diamondStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$287_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage storage pointer"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contractOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 286,
														"src": "2429:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2412:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "2412:47:6"
											}
										]
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2352:2:6"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "contractOwner_",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2378:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2377:24:6"
									},
									"scope": 1261,
									"src": "2330:136:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "2520:117:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 349,
																		"name": "LibMeta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "2538:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibMeta_$1349_$",
																			"typeString": "type(library LibMeta)"
																		}
																	},
																	"id": 350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "msgSender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1348,
																	"src": "2538:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2538:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 352,
																		"name": "diamondStorage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2561:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$287_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
																		}
																	},
																	"id": 353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2561:16:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																		"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "contractOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 286,
																"src": "2561:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2538:53:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e6572",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2593:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac",
																"typeString": "literal_string \"LibDiamond: Must be contract owner\""
															},
															"value": "LibDiamond: Must be contract owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d4ae41009c51fd276653a54d7793c24f266ddc8c56ce21f8be5e2c6595ab3ac",
																"typeString": "literal_string \"LibDiamond: Must be contract owner\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2530:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2530:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "2530:100:6"
											}
										]
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enforceIsContractOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2503:2:6"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2520:0:6"
									},
									"scope": 1261,
									"src": "2472:165:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 370,
									"name": "DiamondCut",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"indexed": false,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2660:34:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 362,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 361,
															"name": "IDiamondCut.FacetCut",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 148,
															"src": "2660:20:6"
														},
														"referencedDeclaration": 148,
														"src": "2660:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 363,
													"nodeType": "ArrayTypeName",
													"src": "2660:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"indexed": false,
												"mutability": "mutable",
												"name": "_init",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2696:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": false,
												"mutability": "mutable",
												"name": "_calldata",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2711:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 367,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2711:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:68:6"
									},
									"src": "2643:85:6"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2881:1305:6",
										"statements": [
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "cut",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2891:33:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDiamondCut.FacetCut[]"
														},
														"typeName": {
															"baseType": {
																"id": 382,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 381,
																	"name": "IDiamondCut.FacetCut",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 148,
																	"src": "2891:20:6"
																},
																"referencedDeclaration": 148,
																"src": "2891:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetCut_$148_storage_ptr",
																	"typeString": "struct IDiamondCut.FacetCut"
																}
															},
															"id": 383,
															"nodeType": "ArrayTypeName",
															"src": "2891:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_storage_$dyn_storage_ptr",
																"typeString": "struct IDiamondCut.FacetCut[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 391,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "33",
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2954:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2927:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IDiamondCut.FacetCut memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 386,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 385,
																	"name": "IDiamondCut.FacetCut",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 148,
																	"src": "2931:20:6"
																},
																"referencedDeclaration": 148,
																"src": "2931:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetCut_$148_storage_ptr",
																	"typeString": "struct IDiamondCut.FacetCut"
																}
															},
															"id": 387,
															"nodeType": "ArrayTypeName",
															"src": "2931:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_storage_$dyn_storage_ptr",
																"typeString": "struct IDiamondCut.FacetCut[]"
															}
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2927:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IDiamondCut.FacetCut memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2891:65:6"
											},
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "functionSelectors",
														"nodeType": "VariableDeclaration",
														"scope": 531,
														"src": "2966:33:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[]"
														},
														"typeName": {
															"baseType": {
																"id": 394,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "2966:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 395,
															"nodeType": "ArrayTypeName",
															"src": "2966:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																"typeString": "bytes4[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3015:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3002:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes4[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 397,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "3006:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 398,
															"nodeType": "ArrayTypeName",
															"src": "3006:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																"typeString": "bytes4[]"
															}
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3002:15:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
														"typeString": "bytes4[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2966:51:6"
											},
											{
												"expression": {
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 403,
															"name": "functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3027:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 405,
														"indexExpression": {
															"hexValue": "30",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3045:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3027:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 406,
																"name": "IDiamondCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "3050:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																	"typeString": "type(contract IDiamondCut)"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "diamondCut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 160,
															"src": "3050:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_FacetCut_$148_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
																"typeString": "function IDiamondCut.diamondCut(struct IDiamondCut.FacetCut calldata[] calldata,address,bytes calldata)"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "3050:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "3027:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "3027:54:6"
											},
											{
												"expression": {
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 411,
															"name": "cut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3091:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														"id": 413,
														"indexExpression": {
															"hexValue": "30",
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3095:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3091:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
															"typeString": "struct IDiamondCut.FacetCut memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 416,
																"name": "_diamondCutFacet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "3136:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"expression": {
																		"id": 417,
																		"name": "IDiamondCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "3162:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																			"typeString": "type(contract IDiamondCut)"
																		}
																	},
																	"id": 418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "FacetCutAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 139,
																	"src": "3162:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$139_$",
																		"typeString": "type(enum IDiamondCut.FacetCutAction)"
																	}
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Add",
																"nodeType": "MemberAccess",
																"src": "3162:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$139",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																}
															},
															{
																"id": 420,
																"name": "functionSelectors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "3213:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_enum$_FacetCutAction_$139",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																},
																{
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															],
															"expression": {
																"id": 414,
																"name": "IDiamondCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "3100:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																	"typeString": "type(contract IDiamondCut)"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "FacetCut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "3100:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FacetCut_$148_storage_ptr_$",
																"typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"facetAddress",
															"action",
															"functionSelectors"
														],
														"nodeType": "FunctionCall",
														"src": "3100:132:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
															"typeString": "struct IDiamondCut.FacetCut memory"
														}
													},
													"src": "3091:141:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
														"typeString": "struct IDiamondCut.FacetCut memory"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "3091:141:6"
											},
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 424,
														"name": "functionSelectors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "3242:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "35",
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3275:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																}
															],
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3262:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes4[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 425,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "3266:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"id": 426,
																"nodeType": "ArrayTypeName",
																"src": "3266:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																	"typeString": "bytes4[]"
																}
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3262:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"src": "3242:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
														"typeString": "bytes4[] memory"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "3242:35:6"
											},
											{
												"expression": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 432,
															"name": "functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3287:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 434,
														"indexExpression": {
															"hexValue": "30",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3305:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3287:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 435,
																"name": "IDiamondLoupe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "3310:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$212_$",
																	"typeString": "type(contract IDiamondLoupe)"
																}
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "facets",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 187,
															"src": "3310:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_struct$_Facet_$179_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function IDiamondLoupe.facets() view returns (struct IDiamondLoupe.Facet memory[] memory)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "3310:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "3287:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "3287:52:6"
											},
											{
												"expression": {
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 440,
															"name": "functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3349:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 442,
														"indexExpression": {
															"hexValue": "31",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3367:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3349:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 443,
																"name": "IDiamondLoupe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "3372:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$212_$",
																	"typeString": "type(contract IDiamondLoupe)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "facetFunctionSelectors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "3372:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																"typeString": "function IDiamondLoupe.facetFunctionSelectors(address) view returns (bytes4[] memory)"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "3372:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "3349:68:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "3349:68:6"
											},
											{
												"expression": {
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 448,
															"name": "functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3427:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 450,
														"indexExpression": {
															"hexValue": "32",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3445:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3427:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 451,
																"name": "IDiamondLoupe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "3450:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$212_$",
																	"typeString": "type(contract IDiamondLoupe)"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "facetAddresses",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "3450:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function IDiamondLoupe.facetAddresses() view returns (address[] memory)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "3450:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "3427:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "3427:60:6"
											},
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 456,
															"name": "functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3497:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 458,
														"indexExpression": {
															"hexValue": "33",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3515:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3497:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 459,
																"name": "IDiamondLoupe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "3520:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondLoupe_$212_$",
																	"typeString": "type(contract IDiamondLoupe)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "facetAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 211,
															"src": "3520:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_address_$",
																"typeString": "function IDiamondLoupe.facetAddress(bytes4) view returns (address)"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "3520:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "3497:58:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "3497:58:6"
											},
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 464,
															"name": "functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3565:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 466,
														"indexExpression": {
															"hexValue": "34",
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3583:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3565:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 467,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "3588:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$223_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 222,
															"src": "3588:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "3588:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "3565:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "3565:57:6"
											},
											{
												"expression": {
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 472,
															"name": "cut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3632:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														"id": 474,
														"indexExpression": {
															"hexValue": "31",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3636:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3632:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
															"typeString": "struct IDiamondCut.FacetCut memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 477,
																"name": "_diamondLoupeFacet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "3690:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"expression": {
																		"id": 478,
																		"name": "IDiamondCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "3730:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																			"typeString": "type(contract IDiamondCut)"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "FacetCutAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 139,
																	"src": "3730:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$139_$",
																		"typeString": "type(enum IDiamondCut.FacetCutAction)"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Add",
																"nodeType": "MemberAccess",
																"src": "3730:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$139",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																}
															},
															{
																"id": 481,
																"name": "functionSelectors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "3793:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_enum$_FacetCutAction_$139",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																},
																{
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															],
															"expression": {
																"id": 475,
																"name": "IDiamondCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "3641:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																	"typeString": "type(contract IDiamondCut)"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "FacetCut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "3641:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FacetCut_$148_storage_ptr_$",
																"typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"facetAddress",
															"action",
															"functionSelectors"
														],
														"nodeType": "FunctionCall",
														"src": "3641:180:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
															"typeString": "struct IDiamondCut.FacetCut memory"
														}
													},
													"src": "3632:189:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
														"typeString": "struct IDiamondCut.FacetCut memory"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "3632:189:6"
											},
											{
												"expression": {
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 485,
														"name": "functionSelectors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "3831:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3864:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3851:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes4[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 486,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "3855:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"id": 487,
																"nodeType": "ArrayTypeName",
																"src": "3855:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																	"typeString": "bytes4[]"
																}
															}
														},
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3851:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"src": "3831:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
														"typeString": "bytes4[] memory"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "3831:35:6"
											},
											{
												"expression": {
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 493,
															"name": "functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3876:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 495,
														"indexExpression": {
															"hexValue": "30",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3894:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3876:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 496,
																"name": "IERC173",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "3899:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC173_$239_$",
																	"typeString": "type(contract IERC173)"
																}
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "transferOwnership",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 238,
															"src": "3899:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
																"typeString": "function IERC173.transferOwnership(address)"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "3899:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "3876:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "3876:57:6"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 501,
															"name": "functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3943:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 503,
														"indexExpression": {
															"hexValue": "31",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3961:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3943:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 504,
																"name": "IERC173",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "3966:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC173_$239_$",
																	"typeString": "type(contract IERC173)"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 232,
															"src": "3966:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
																"typeString": "function IERC173.owner() view returns (address)"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "3966:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "3943:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "3943:45:6"
											},
											{
												"expression": {
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 509,
															"name": "cut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "3998:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														"id": 511,
														"indexExpression": {
															"hexValue": "32",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4002:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3998:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
															"typeString": "struct IDiamondCut.FacetCut memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 514,
																"name": "_ownershipFacet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "4043:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"expression": {
																		"id": 515,
																		"name": "IDiamondCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "4068:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																			"typeString": "type(contract IDiamondCut)"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "FacetCutAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 139,
																	"src": "4068:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$139_$",
																		"typeString": "type(enum IDiamondCut.FacetCutAction)"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Add",
																"nodeType": "MemberAccess",
																"src": "4068:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$139",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																}
															},
															{
																"id": 518,
																"name": "functionSelectors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "4119:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_enum$_FacetCutAction_$139",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																},
																{
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															],
															"expression": {
																"id": 512,
																"name": "IDiamondCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "4007:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																	"typeString": "type(contract IDiamondCut)"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "FacetCut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 148,
															"src": "4007:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FacetCut_$148_storage_ptr_$",
																"typeString": "type(struct IDiamondCut.FacetCut storage pointer)"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"facetAddress",
															"action",
															"functionSelectors"
														],
														"nodeType": "FunctionCall",
														"src": "4007:131:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
															"typeString": "struct IDiamondCut.FacetCut memory"
														}
													},
													"src": "3998:140:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
														"typeString": "struct IDiamondCut.FacetCut memory"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "3998:140:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "cut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "4159:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4172:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4164:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 524,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4164:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4164:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4176:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 522,
														"name": "diamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "4148:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4148:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "4148:31:6"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addDiamondFunctions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "_diamondCutFacet",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2772:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "_diamondLoupeFacet",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2806:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2806:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "_ownershipFacet",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2842:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2762:109:6"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2881:0:6"
									},
									"scope": 1261,
									"src": "2734:1452:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "4380:926:6",
										"statements": [
											{
												"body": {
													"id": 622,
													"nodeType": "Block",
													"src": "4462:734:6",
													"statements": [
														{
															"assignments": [
																557
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 557,
																	"mutability": "mutable",
																	"name": "action",
																	"nodeType": "VariableDeclaration",
																	"scope": 622,
																	"src": "4476:33:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$139",
																		"typeString": "enum IDiamondCut.FacetCutAction"
																	},
																	"typeName": {
																		"id": 556,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 555,
																			"name": "IDiamondCut.FacetCutAction",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 139,
																			"src": "4476:26:6"
																		},
																		"referencedDeclaration": 139,
																		"src": "4476:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$139",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 562,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 558,
																		"name": "_diamondCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "4512:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																		}
																	},
																	"id": 560,
																	"indexExpression": {
																		"id": 559,
																		"name": "facetIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "4524:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4512:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
																		"typeString": "struct IDiamondCut.FacetCut memory"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "action",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "4512:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$139",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4476:66:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$139",
																	"typeString": "enum IDiamondCut.FacetCutAction"
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 563,
																	"name": "action",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "4560:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$139",
																		"typeString": "enum IDiamondCut.FacetCutAction"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 564,
																			"name": "IDiamondCut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "4570:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																				"typeString": "type(contract IDiamondCut)"
																			}
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "FacetCutAction",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 139,
																		"src": "4570:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$139_$",
																			"typeString": "type(enum IDiamondCut.FacetCutAction)"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Add",
																	"nodeType": "MemberAccess",
																	"src": "4570:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$139",
																		"typeString": "enum IDiamondCut.FacetCutAction"
																	}
																},
																"src": "4560:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_enum$_FacetCutAction_$139",
																		"typeString": "enum IDiamondCut.FacetCutAction"
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 580,
																		"name": "action",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "4738:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$139",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"expression": {
																			"expression": {
																				"id": 581,
																				"name": "IDiamondCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 171,
																				"src": "4748:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																					"typeString": "type(contract IDiamondCut)"
																				}
																			},
																			"id": 582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "FacetCutAction",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 139,
																			"src": "4748:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$139_$",
																				"typeString": "type(enum IDiamondCut.FacetCutAction)"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "Replace",
																		"nodeType": "MemberAccess",
																		"src": "4748:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$139",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		}
																	},
																	"src": "4738:44:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$139",
																			"typeString": "enum IDiamondCut.FacetCutAction"
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 597,
																			"name": "action",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 557,
																			"src": "4924:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$139",
																				"typeString": "enum IDiamondCut.FacetCutAction"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"id": 598,
																					"name": "IDiamondCut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 171,
																					"src": "4934:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IDiamondCut_$171_$",
																						"typeString": "type(contract IDiamondCut)"
																					}
																				},
																				"id": 599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "FacetCutAction",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 139,
																				"src": "4934:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$139_$",
																					"typeString": "type(enum IDiamondCut.FacetCutAction)"
																				}
																			},
																			"id": 600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "Remove",
																			"nodeType": "MemberAccess",
																			"src": "4934:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$139",
																				"typeString": "enum IDiamondCut.FacetCutAction"
																			}
																		},
																		"src": "4924:43:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 618,
																		"nodeType": "Block",
																		"src": "5104:82:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "4c69624469616d6f6e644375743a20496e636f7272656374204661636574437574416374696f6e",
																							"id": 615,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5129:41:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54",
																								"typeString": "literal_string \"LibDiamondCut: Incorrect FacetCutAction\""
																							},
																							"value": "LibDiamondCut: Incorrect FacetCutAction"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_48267d8daf5ea9c6bbad1fe9c53dc4c04a2a01b2b85bad432956cf42f45b2f54",
																								"typeString": "literal_string \"LibDiamondCut: Incorrect FacetCutAction\""
																							}
																						],
																						"id": 614,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "5122:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 616,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5122:49:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 617,
																				"nodeType": "ExpressionStatement",
																				"src": "5122:49:6"
																			}
																		]
																	},
																	"id": 619,
																	"nodeType": "IfStatement",
																	"src": "4920:266:6",
																	"trueBody": {
																		"id": 613,
																		"nodeType": "Block",
																		"src": "4969:129:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 603,
																									"name": "_diamondCut",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 536,
																									"src": "5003:11:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																									}
																								},
																								"id": 605,
																								"indexExpression": {
																									"id": 604,
																									"name": "facetIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 544,
																									"src": "5015:10:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5003:23:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory"
																								}
																							},
																							"id": 606,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "facetAddress",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 141,
																							"src": "5003:36:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 607,
																									"name": "_diamondCut",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 536,
																									"src": "5041:11:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																									}
																								},
																								"id": 609,
																								"indexExpression": {
																									"id": 608,
																									"name": "facetIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 544,
																									"src": "5053:10:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5041:23:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory"
																								}
																							},
																							"id": 610,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "functionSelectors",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 147,
																							"src": "5041:41:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																								"typeString": "bytes4[] memory"
																							}
																						],
																						"id": 602,
																						"name": "removeFunctions",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 990,
																						"src": "4987:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																							"typeString": "function (address,bytes4[] memory)"
																						}
																					},
																					"id": 611,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4987:96:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 612,
																				"nodeType": "ExpressionStatement",
																				"src": "4987:96:6"
																			}
																		]
																	}
																},
																"id": 620,
																"nodeType": "IfStatement",
																"src": "4734:452:6",
																"trueBody": {
																	"id": 596,
																	"nodeType": "Block",
																	"src": "4784:130:6",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 586,
																								"name": "_diamondCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 536,
																								"src": "4819:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																								}
																							},
																							"id": 588,
																							"indexExpression": {
																								"id": 587,
																								"name": "facetIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 544,
																								"src": "4831:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4819:23:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory"
																							}
																						},
																						"id": 589,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "facetAddress",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 141,
																						"src": "4819:36:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 590,
																								"name": "_diamondCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 536,
																								"src": "4857:11:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																								}
																							},
																							"id": 592,
																							"indexExpression": {
																								"id": 591,
																								"name": "facetIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 544,
																								"src": "4869:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4857:23:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory"
																							}
																						},
																						"id": 593,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "functionSelectors",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 147,
																						"src": "4857:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																							"typeString": "bytes4[] memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																							"typeString": "bytes4[] memory"
																						}
																					],
																					"id": 585,
																					"name": "replaceFunctions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 926,
																					"src": "4802:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																						"typeString": "function (address,bytes4[] memory)"
																					}
																				},
																				"id": 594,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4802:97:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 595,
																			"nodeType": "ExpressionStatement",
																			"src": "4802:97:6"
																		}
																	]
																}
															},
															"id": 621,
															"nodeType": "IfStatement",
															"src": "4556:630:6",
															"trueBody": {
																"id": 579,
																"nodeType": "Block",
																"src": "4602:126:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 569,
																							"name": "_diamondCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 536,
																							"src": "4633:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																							}
																						},
																						"id": 571,
																						"indexExpression": {
																							"id": 570,
																							"name": "facetIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 544,
																							"src": "4645:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4633:23:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
																							"typeString": "struct IDiamondCut.FacetCut memory"
																						}
																					},
																					"id": 572,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "facetAddress",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 141,
																					"src": "4633:36:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 573,
																							"name": "_diamondCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 536,
																							"src": "4671:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IDiamondCut.FacetCut memory[] memory"
																							}
																						},
																						"id": 575,
																						"indexExpression": {
																							"id": 574,
																							"name": "facetIndex",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 544,
																							"src": "4683:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "4671:23:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetCut_$148_memory_ptr",
																							"typeString": "struct IDiamondCut.FacetCut memory"
																						}
																					},
																					"id": 576,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "functionSelectors",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 147,
																					"src": "4671:41:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																						"typeString": "bytes4[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																						"typeString": "bytes4[] memory"
																					}
																				],
																				"id": 568,
																				"name": "addFunctions",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 780,
																				"src": "4620:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$__$",
																					"typeString": "function (address,bytes4[] memory)"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4620:93:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 578,
																		"nodeType": "ExpressionStatement",
																		"src": "4620:93:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 546,
														"name": "facetIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "4415:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 547,
															"name": "_diamondCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "4428:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4428:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4415:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 623,
												"initializationExpression": {
													"assignments": [
														544
													],
													"declarations": [
														{
															"constant": false,
															"id": 544,
															"mutability": "mutable",
															"name": "facetIndex",
															"nodeType": "VariableDeclaration",
															"scope": 623,
															"src": "4395:18:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 543,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4395:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 545,
													"nodeType": "VariableDeclarationStatement",
													"src": "4395:18:6"
												},
												"loopExpression": {
													"expression": {
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4448:12:6",
														"subExpression": {
															"id": 550,
															"name": "facetIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4448:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 552,
													"nodeType": "ExpressionStatement",
													"src": "4448:12:6"
												},
												"nodeType": "ForStatement",
												"src": "4390:806:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 625,
															"name": "_diamondCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "5221:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															}
														},
														{
															"id": 626,
															"name": "_init",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "5234:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "_calldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "5241:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamondCut.FacetCut memory[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 624,
														"name": "DiamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "5210:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct IDiamondCut.FacetCut memory[] memory,address,bytes memory)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5210:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 629,
												"nodeType": "EmitStatement",
												"src": "5205:46:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "_init",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "5282:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "_calldata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "5289:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 630,
														"name": "initializeDiamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "5261:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5261:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "5261:38:6"
											}
										]
									},
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "4268:41:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamondCut.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 534,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 533,
															"name": "IDiamondCut.FacetCut",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 148,
															"src": "4268:20:6"
														},
														"referencedDeclaration": 148,
														"src": "4268:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$148_storage_ptr",
															"typeString": "struct IDiamondCut.FacetCut"
														}
													},
													"id": 535,
													"nodeType": "ArrayTypeName",
													"src": "4268:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$148_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamondCut.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "_init",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "4319:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4319:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "_calldata",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "4342:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4342:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4258:112:6"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4380:0:6"
									},
									"scope": 1261,
									"src": "4239:1067:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "5402:1461:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 645,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "5420:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5420:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5448:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5420:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5451:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															},
															"value": "LibDiamondCut: No selectors in facet to cut"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															}
														],
														"id": 644,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5412:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5412:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "5412:85:6"
											},
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "ds",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "5507:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 653,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 652,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 287,
																"src": "5507:14:6"
															},
															"referencedDeclaration": 287,
															"src": "5507:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 655,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "5535:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$287_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5507:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 659,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 638,
																"src": "5646:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5671:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5663:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 660,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5663:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5663:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5646:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204164642066616365742063616e27742062652061646472657373283029",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5675:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a",
																"typeString": "literal_string \"LibDiamondCut: Add facet can't be address(0)\""
															},
															"value": "LibDiamondCut: Add facet can't be address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a",
																"typeString": "literal_string \"LibDiamondCut: Add facet can't be address(0)\""
															}
														],
														"id": 658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5638:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5638:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "5638:84:6"
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "selectorPosition",
														"nodeType": "VariableDeclaration",
														"scope": 779,
														"src": "5732:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 668,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "5732:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 672,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "5765:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 673,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetFunctionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 277,
																		"src": "5765:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																			"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																		}
																	},
																	"id": 675,
																	"indexExpression": {
																		"id": 674,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "5791:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5765:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																		"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "functionSelectors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 264,
																"src": "5765:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																	"typeString": "bytes4[] storage ref"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5765:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5758:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 670,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "5758:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5758:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5732:99:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "selectorPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "5899:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5919:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5899:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"nodeType": "IfStatement",
												"src": "5895:290:6",
												"trueBody": {
													"id": 710,
													"nodeType": "Block",
													"src": "5922:263:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 684,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "5959:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5974:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_846ccbeb9c32d4d40d2c1bf991251db6ab65744a2f52b273947cee088a65504b",
																			"typeString": "literal_string \"LibDiamondCut: New facet has no code\""
																		},
																		"value": "LibDiamondCut: New facet has no code"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_846ccbeb9c32d4d40d2c1bf991251db6ab65744a2f52b273947cee088a65504b",
																			"typeString": "literal_string \"LibDiamondCut: New facet has no code\""
																		}
																	],
																	"id": 683,
																	"name": "enforceHasContractCode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "5936:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory) view"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5936:77:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 687,
															"nodeType": "ExpressionStatement",
															"src": "5936:77:6"
														},
														{
															"expression": {
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 688,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "6027:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 691,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "facetFunctionSelectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 277,
																			"src": "6027:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																				"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																			}
																		},
																		"id": 692,
																		"indexExpression": {
																			"id": 690,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "6053:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6027:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																			"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "facetAddressPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 266,
																	"src": "6027:61:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 696,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 654,
																					"src": "6098:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 697,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "facetAddresses",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 280,
																				"src": "6098:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6098:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6091:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 694,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "6091:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6091:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "6027:96:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 701,
															"nodeType": "ExpressionStatement",
															"src": "6027:96:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 707,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "6160:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 702,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "6137:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 705,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 280,
																		"src": "6137:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "6137:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6137:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 709,
															"nodeType": "ExpressionStatement",
															"src": "6137:37:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 777,
													"nodeType": "Block",
													"src": "6282:575:6",
													"statements": [
														{
															"assignments": [
																723
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 723,
																	"mutability": "mutable",
																	"name": "selector",
																	"nodeType": "VariableDeclaration",
																	"scope": 777,
																	"src": "6296:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 722,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "6296:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 727,
															"initialValue": {
																"baseExpression": {
																	"id": 724,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "6314:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 726,
																"indexExpression": {
																	"id": 725,
																	"name": "selectorIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "6333:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6314:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6296:51:6"
														},
														{
															"assignments": [
																729
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 729,
																	"mutability": "mutable",
																	"name": "oldFacetAddress",
																	"nodeType": "VariableDeclaration",
																	"scope": 777,
																	"src": "6361:23:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 728,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6361:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 735,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 730,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "6387:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "selectorToFacetAndPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 272,
																		"src": "6387:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																		}
																	},
																	"id": 733,
																	"indexExpression": {
																		"id": 732,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "6417:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6387:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "facetAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "6387:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6361:78:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 737,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 729,
																			"src": "6461:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 740,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6488:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 739,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6480:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 738,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6480:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6480:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6461:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6e207468617420616c726561647920657869737473",
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6492:55:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700",
																			"typeString": "literal_string \"LibDiamondCut: Can't add function that already exists\""
																		},
																		"value": "LibDiamondCut: Can't add function that already exists"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_99a7418ee014d613f46da44561258cdbb58064508097483a319062b99fa37700",
																			"typeString": "literal_string \"LibDiamondCut: Can't add function that already exists\""
																		}
																	],
																	"id": 736,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6453:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6453:95:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 745,
															"nodeType": "ExpressionStatement",
															"src": "6453:95:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 753,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 723,
																		"src": "6626:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 746,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 654,
																					"src": "6562:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 749,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 277,
																				"src": "6562:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 750,
																			"indexExpression": {
																				"id": 748,
																				"name": "_facetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 638,
																				"src": "6588:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6562:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 751,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 264,
																		"src": "6562:58:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "6562:63:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4)"
																	}
																},
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6562:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 755,
															"nodeType": "ExpressionStatement",
															"src": "6562:73:6"
														},
														{
															"expression": {
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 756,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "6649:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 759,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selectorToFacetAndPosition",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 272,
																			"src": "6649:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																				"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																			}
																		},
																		"id": 760,
																		"indexExpression": {
																			"id": 758,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 723,
																			"src": "6679:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6649:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
																			"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "facetAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "6649:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 762,
																	"name": "_facetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6704:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6649:68:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 764,
															"nodeType": "ExpressionStatement",
															"src": "6649:68:6"
														},
														{
															"expression": {
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 765,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 654,
																				"src": "6731:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 768,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selectorToFacetAndPosition",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 272,
																			"src": "6731:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																				"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																			}
																		},
																		"id": 769,
																		"indexExpression": {
																			"id": 767,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 723,
																			"src": "6761:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6731:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
																			"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																		}
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "functionSelectorPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 260,
																	"src": "6731:64:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 771,
																	"name": "selectorPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "6798:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "6731:83:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 773,
															"nodeType": "ExpressionStatement",
															"src": "6731:83:6"
														},
														{
															"expression": {
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6828:18:6",
																"subExpression": {
																	"id": 774,
																	"name": "selectorPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "6828:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 776,
															"nodeType": "ExpressionStatement",
															"src": "6828:18:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "6222:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 716,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "6238:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6238:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6222:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"initializationExpression": {
													"assignments": [
														713
													],
													"declarations": [
														{
															"constant": false,
															"id": 713,
															"mutability": "mutable",
															"name": "selectorIndex",
															"nodeType": "VariableDeclaration",
															"scope": 778,
															"src": "6199:21:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 712,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6199:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 714,
													"nodeType": "VariableDeclarationStatement",
													"src": "6199:21:6"
												},
												"loopExpression": {
													"expression": {
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6265:15:6",
														"subExpression": {
															"id": 719,
															"name": "selectorIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "6265:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 721,
													"nodeType": "ExpressionStatement",
													"src": "6265:15:6"
												},
												"nodeType": "ForStatement",
												"src": "6194:663:6"
											}
										]
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addFunctions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "5334:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5334:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "5357:34:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 639,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "5357:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 640,
													"nodeType": "ArrayTypeName",
													"src": "5357:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5333:59:6"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5402:0:6"
									},
									"scope": 1261,
									"src": "5312:1551:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "6963:1473:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 789,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "6981:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6981:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7009:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6981:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7012:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															},
															"value": "LibDiamondCut: No selectors in facet to cut"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															}
														],
														"id": 788,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6973:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6973:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "6973:85:6"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "ds",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "7068:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 797,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 796,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 287,
																"src": "7068:14:6"
															},
															"referencedDeclaration": 287,
															"src": "7068:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 799,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "7096:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$287_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7096:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7068:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 803,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "7130:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7155:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7147:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 804,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7147:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7147:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7130:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204164642066616365742063616e27742062652061646472657373283029",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7159:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a",
																"typeString": "literal_string \"LibDiamondCut: Add facet can't be address(0)\""
															},
															"value": "LibDiamondCut: Add facet can't be address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64609d8b93c93a06b98d7db7a87b04044cd4a52c5661d603bb9b90ad8b914a3a",
																"typeString": "literal_string \"LibDiamondCut: Add facet can't be address(0)\""
															}
														],
														"id": 802,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7122:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:84:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "7122:84:6"
											},
											{
												"assignments": [
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "selectorPosition",
														"nodeType": "VariableDeclaration",
														"scope": 925,
														"src": "7216:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 812,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "7216:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 823,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 816,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "7249:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetFunctionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 277,
																		"src": "7249:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																			"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																		}
																	},
																	"id": 819,
																	"indexExpression": {
																		"id": 818,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "7275:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7249:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																		"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "functionSelectors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 264,
																"src": "7249:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																	"typeString": "bytes4[] storage ref"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "7249:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7242:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 814,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "7242:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7242:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7216:99:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 824,
														"name": "selectorPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "7383:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7403:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7383:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 855,
												"nodeType": "IfStatement",
												"src": "7379:290:6",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "7406:263:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 828,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "7443:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465",
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7458:38:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_846ccbeb9c32d4d40d2c1bf991251db6ab65744a2f52b273947cee088a65504b",
																			"typeString": "literal_string \"LibDiamondCut: New facet has no code\""
																		},
																		"value": "LibDiamondCut: New facet has no code"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_846ccbeb9c32d4d40d2c1bf991251db6ab65744a2f52b273947cee088a65504b",
																			"typeString": "literal_string \"LibDiamondCut: New facet has no code\""
																		}
																	],
																	"id": 827,
																	"name": "enforceHasContractCode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "7420:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (address,string memory) view"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7420:77:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 831,
															"nodeType": "ExpressionStatement",
															"src": "7420:77:6"
														},
														{
															"expression": {
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 832,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "7511:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 835,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "facetFunctionSelectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 277,
																			"src": "7511:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																				"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																			}
																		},
																		"id": 836,
																		"indexExpression": {
																			"id": 834,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "7537:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7511:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																			"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "facetAddressPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 266,
																	"src": "7511:61:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 840,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "7582:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 841,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "facetAddresses",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 280,
																				"src": "7582:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7582:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7575:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 838,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "7575:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7575:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "7511:96:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "7511:96:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 851,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 782,
																		"src": "7644:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 846,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "7621:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 280,
																		"src": "7621:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "7621:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7621:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 853,
															"nodeType": "ExpressionStatement",
															"src": "7621:37:6"
														}
													]
												}
											},
											{
												"body": {
													"id": 923,
													"nodeType": "Block",
													"src": "7766:664:6",
													"statements": [
														{
															"assignments": [
																867
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 867,
																	"mutability": "mutable",
																	"name": "selector",
																	"nodeType": "VariableDeclaration",
																	"scope": 923,
																	"src": "7780:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 866,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "7780:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 871,
															"initialValue": {
																"baseExpression": {
																	"id": 868,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "7798:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 870,
																"indexExpression": {
																	"id": 869,
																	"name": "selectorIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "7817:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7798:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7780:51:6"
														},
														{
															"assignments": [
																873
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 873,
																	"mutability": "mutable",
																	"name": "oldFacetAddress",
																	"nodeType": "VariableDeclaration",
																	"scope": 923,
																	"src": "7845:23:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 872,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7845:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 879,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 874,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 798,
																			"src": "7871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "selectorToFacetAndPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 272,
																		"src": "7871:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																		}
																	},
																	"id": 877,
																	"indexExpression": {
																		"id": 876,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "7901:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7871:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "facetAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "7871:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7845:78:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 881,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 873,
																			"src": "7945:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 882,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 782,
																			"src": "7964:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7945:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e6374696f6e20776974682073616d652066756e6374696f6e",
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7979:58:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078",
																			"typeString": "literal_string \"LibDiamondCut: Can't replace function with same function\""
																		},
																		"value": "LibDiamondCut: Can't replace function with same function"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b5a7112edf707196456f338fdcc19cd849be6cb8c0d166bcd035f4cfb00e7078",
																			"typeString": "literal_string \"LibDiamondCut: Can't replace function with same function\""
																		}
																	],
																	"id": 880,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7937:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7937:101:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "7937:101:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 888,
																		"name": "oldFacetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "8067:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 889,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "8084:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 887,
																	"name": "removeFunction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "8052:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
																		"typeString": "function (address,bytes4)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8052:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 891,
															"nodeType": "ExpressionStatement",
															"src": "8052:41:6"
														},
														{
															"expression": {
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 892,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "8135:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 895,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selectorToFacetAndPosition",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 272,
																			"src": "8135:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																				"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																			}
																		},
																		"id": 896,
																		"indexExpression": {
																			"id": 894,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "8165:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8135:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
																			"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																		}
																	},
																	"id": 897,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "functionSelectorPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 260,
																	"src": "8135:64:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 898,
																	"name": "selectorPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "8202:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "8135:83:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 900,
															"nodeType": "ExpressionStatement",
															"src": "8135:83:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 908,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 867,
																		"src": "8296:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 901,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "8232:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 904,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 277,
																				"src": "8232:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 905,
																			"indexExpression": {
																				"id": 903,
																				"name": "_facetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "8258:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8232:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 264,
																		"src": "8232:58:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "8232:63:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4)"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8232:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 910,
															"nodeType": "ExpressionStatement",
															"src": "8232:73:6"
														},
														{
															"expression": {
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 911,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "8319:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 914,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selectorToFacetAndPosition",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 272,
																			"src": "8319:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																				"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																			}
																		},
																		"id": 915,
																		"indexExpression": {
																			"id": 913,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "8349:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8319:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
																			"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																		}
																	},
																	"id": 916,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "facetAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "8319:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 917,
																	"name": "_facetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "8374:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8319:68:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "8319:68:6"
														},
														{
															"expression": {
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8401:18:6",
																"subExpression": {
																	"id": 920,
																	"name": "selectorPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "8401:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 922,
															"nodeType": "ExpressionStatement",
															"src": "8401:18:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 859,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "7706:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 860,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "7722:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7722:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7706:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"initializationExpression": {
													"assignments": [
														857
													],
													"declarations": [
														{
															"constant": false,
															"id": 857,
															"mutability": "mutable",
															"name": "selectorIndex",
															"nodeType": "VariableDeclaration",
															"scope": 924,
															"src": "7683:21:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 856,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7683:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 858,
													"nodeType": "VariableDeclarationStatement",
													"src": "7683:21:6"
												},
												"loopExpression": {
													"expression": {
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7749:15:6",
														"subExpression": {
															"id": 863,
															"name": "selectorIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "7749:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 865,
													"nodeType": "ExpressionStatement",
													"src": "7749:15:6"
												},
												"nodeType": "ForStatement",
												"src": "7678:752:6"
											}
										]
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "replaceFunctions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "6895:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6895:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "6918:34:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 783,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "6918:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 784,
													"nodeType": "ArrayTypeName",
													"src": "6918:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6894:59:6"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6963:0:6"
									},
									"scope": 1261,
									"src": "6869:1567:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "8535:645:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 935,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "8553:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8553:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8581:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8553:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e20666163657420746f20637574",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8584:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															},
															"value": "LibDiamondCut: No selectors in facet to cut"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ffc682bcfedefd5e93ba9ed0c2d1bc0b18319886e3b4bd28a03a3d3729f85c0",
																"typeString": "literal_string \"LibDiamondCut: No selectors in facet to cut\""
															}
														],
														"id": 934,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8545:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8545:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "8545:85:6"
											},
											{
												"assignments": [
													944
												],
												"declarations": [
													{
														"constant": false,
														"id": 944,
														"mutability": "mutable",
														"name": "ds",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "8640:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 943,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 942,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 287,
																"src": "8640:14:6"
															},
															"referencedDeclaration": 287,
															"src": "8640:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 945,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "8668:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$287_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8668:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8640:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 949,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "8767:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8792:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8784:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 950,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8784:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8784:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8767:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472657373206d7573742062652061646472657373283029",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8796:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4",
																"typeString": "literal_string \"LibDiamondCut: Remove facet address must be address(0)\""
															},
															"value": "LibDiamondCut: Remove facet address must be address(0)"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b739aae768f79b96e91d9f66398733516895e39eb09ee54a795b49dcc77504d4",
																"typeString": "literal_string \"LibDiamondCut: Remove facet address must be address(0)\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8759:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8759:94:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "8759:94:6"
											},
											{
												"body": {
													"id": 987,
													"nodeType": "Block",
													"src": "8951:223:6",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "selector",
																	"nodeType": "VariableDeclaration",
																	"scope": 987,
																	"src": "8965:15:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "8965:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"baseExpression": {
																	"id": 970,
																	"name": "_functionSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "8983:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 972,
																"indexExpression": {
																	"id": 971,
																	"name": "selectorIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "9002:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8983:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8965:51:6"
														},
														{
															"assignments": [
																975
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 975,
																	"mutability": "mutable",
																	"name": "oldFacetAddress",
																	"nodeType": "VariableDeclaration",
																	"scope": 987,
																	"src": "9030:23:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 974,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9030:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 981,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 976,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "9056:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "selectorToFacetAndPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 272,
																		"src": "9056:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																			"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																		}
																	},
																	"id": 979,
																	"indexExpression": {
																		"id": 978,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "9086:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9056:39:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
																		"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																	}
																},
																"id": 980,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "facetAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 258,
																"src": "9056:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9030:78:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 983,
																		"name": "oldFacetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "9137:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 984,
																		"name": "selector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "9154:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 982,
																	"name": "removeFunction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "9122:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes4_$returns$__$",
																		"typeString": "function (address,bytes4)"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9122:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 986,
															"nodeType": "ExpressionStatement",
															"src": "9122:41:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 961,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "8891:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 962,
															"name": "_functionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "8907:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8907:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8891:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"initializationExpression": {
													"assignments": [
														959
													],
													"declarations": [
														{
															"constant": false,
															"id": 959,
															"mutability": "mutable",
															"name": "selectorIndex",
															"nodeType": "VariableDeclaration",
															"scope": 988,
															"src": "8868:21:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 958,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8868:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 960,
													"nodeType": "VariableDeclarationStatement",
													"src": "8868:21:6"
												},
												"loopExpression": {
													"expression": {
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8934:15:6",
														"subExpression": {
															"id": 965,
															"name": "selectorIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "8934:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 967,
													"nodeType": "ExpressionStatement",
													"src": "8934:15:6"
												},
												"nodeType": "ForStatement",
												"src": "8863:311:6"
											}
										]
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeFunctions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "8467:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8467:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "_functionSelectors",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "8490:34:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 929,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "8490:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 930,
													"nodeType": "ArrayTypeName",
													"src": "8490:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8466:59:6"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8535:0:6"
									},
									"scope": 1261,
									"src": "8442:738:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "9260:2143:6",
										"statements": [
											{
												"assignments": [
													999
												],
												"declarations": [
													{
														"constant": false,
														"id": 999,
														"mutability": "mutable",
														"name": "ds",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "9270:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
															"typeString": "struct LibDiamond.DiamondStorage"
														},
														"typeName": {
															"id": 998,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 997,
																"name": "DiamondStorage",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 287,
																"src": "9270:14:6"
															},
															"referencedDeclaration": 287,
															"src": "9270:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																"typeString": "struct LibDiamond.DiamondStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1002,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1000,
														"name": "diamondStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "9298:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$287_storage_ptr_$",
															"typeString": "function () pure returns (struct LibDiamond.DiamondStorage storage pointer)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9298:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
														"typeString": "struct LibDiamond.DiamondStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9270:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1004,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "9332:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9357:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9349:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1005,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9349:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9349:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9332:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6374696f6e207468617420646f65736e2774206578697374",
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9361:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71",
																"typeString": "literal_string \"LibDiamondCut: Can't remove function that doesn't exist\""
															},
															"value": "LibDiamondCut: Can't remove function that doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c590e498c4d56c984a7092fd5e89a68b9f4541ce9f97252fb74e44a00ffbb71",
																"typeString": "literal_string \"LibDiamondCut: Can't remove function that doesn't exist\""
															}
														],
														"id": 1003,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9324:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9324:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "9324:95:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1014,
																"name": "_facetAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "9514:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1017,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "9539:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LibDiamond_$1261",
																			"typeString": "library LibDiamond"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_LibDiamond_$1261",
																			"typeString": "library LibDiamond"
																		}
																	],
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9531:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1015,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9531:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9531:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9514:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d757461626c652066756e6374696f6e",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9546:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21",
																"typeString": "literal_string \"LibDiamondCut: Can't remove immutable function\""
															},
															"value": "LibDiamondCut: Can't remove immutable function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ba063dfaa4be2d2cbe73dbb1364728b0f7031ac048441d5fad19e9541992b21",
																"typeString": "literal_string \"LibDiamondCut: Can't remove immutable function\""
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9506:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9506:89:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "9506:89:6"
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "selectorPosition",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "9679:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9679:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1030,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 1025,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "9706:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																	"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selectorToFacetAndPosition",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "9706:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
															}
														},
														"id": 1028,
														"indexExpression": {
															"id": 1027,
															"name": "_selector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "9736:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9706:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
															"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "functionSelectorPosition",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 260,
													"src": "9706:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9679:92:6"
											},
											{
												"assignments": [
													1032
												],
												"declarations": [
													{
														"constant": false,
														"id": 1032,
														"mutability": "mutable",
														"name": "lastSelectorPosition",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "9781:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1031,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9781:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 1033,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "9812:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																			"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																		}
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "facetFunctionSelectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 277,
																	"src": "9812:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																		"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																	}
																},
																"id": 1036,
																"indexExpression": {
																	"id": 1035,
																	"name": "_facetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "9838:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9812:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																	"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "functionSelectors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 264,
															"src": "9812:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																"typeString": "bytes4[] storage ref"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9812:65:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9880:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9812:69:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9781:100:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1042,
														"name": "selectorPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "9963:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1043,
														"name": "lastSelectorPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "9983:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9963:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "9959:387:6",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "10005:341:6",
													"statements": [
														{
															"assignments": [
																1046
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1046,
																	"mutability": "mutable",
																	"name": "lastSelector",
																	"nodeType": "VariableDeclaration",
																	"scope": 1078,
																	"src": "10019:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1045,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "10019:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1054,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1047,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 999,
																				"src": "10041:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "facetFunctionSelectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 277,
																			"src": "10041:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																				"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																			}
																		},
																		"id": 1050,
																		"indexExpression": {
																			"id": 1049,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "10067:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10041:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																			"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																		}
																	},
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionSelectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 264,
																	"src": "10041:58:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																		"typeString": "bytes4[] storage ref"
																	}
																},
																"id": 1053,
																"indexExpression": {
																	"id": 1052,
																	"name": "lastSelectorPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "10100:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10041:80:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10019:102:6"
														},
														{
															"expression": {
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 1055,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 999,
																					"src": "10135:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 1058,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "facetFunctionSelectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 277,
																				"src": "10135:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																					"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																				}
																			},
																			"id": 1059,
																			"indexExpression": {
																				"id": 1057,
																				"name": "_facetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 992,
																				"src": "10161:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10135:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																				"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																			}
																		},
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "functionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 264,
																		"src": "10135:58:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																			"typeString": "bytes4[] storage ref"
																		}
																	},
																	"id": 1062,
																	"indexExpression": {
																		"id": 1061,
																		"name": "selectorPosition",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "10194:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10135:76:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1063,
																	"name": "lastSelector",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "10214:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "10135:91:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1065,
															"nodeType": "ExpressionStatement",
															"src": "10135:91:6"
														},
														{
															"expression": {
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1066,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 999,
																				"src": "10240:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selectorToFacetAndPosition",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 272,
																			"src": "10240:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																				"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
																			}
																		},
																		"id": 1070,
																		"indexExpression": {
																			"id": 1068,
																			"name": "lastSelector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "10270:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10240:43:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
																			"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "functionSelectorPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 260,
																	"src": "10240:68:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1074,
																			"name": "selectorPosition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "10318:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10311:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1072,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "10311:6:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10311:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "10240:95:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 1077,
															"nodeType": "ExpressionStatement",
															"src": "10240:95:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 1080,
																		"name": "ds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "10391:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																			"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "facetFunctionSelectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 277,
																	"src": "10391:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																		"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																	}
																},
																"id": 1084,
																"indexExpression": {
																	"id": 1082,
																	"name": "_facetAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10417:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10391:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																	"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "functionSelectors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 264,
															"src": "10391:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage",
																"typeString": "bytes4[] storage ref"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "10391:62:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10391:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "10391:64:6"
											},
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10465:47:6",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 1089,
																"name": "ds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "10472:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																	"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selectorToFacetAndPosition",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "10472:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$261_storage_$",
																"typeString": "mapping(bytes4 => struct LibDiamond.FacetAddressAndPosition storage ref)"
															}
														},
														"id": 1092,
														"indexExpression": {
															"id": 1091,
															"name": "_selector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "10502:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10472:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetAddressAndPosition_$261_storage",
															"typeString": "struct LibDiamond.FacetAddressAndPosition storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "10465:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1095,
														"name": "lastSelectorPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "10607:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10631:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10607:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1161,
												"nodeType": "IfStatement",
												"src": "10603:794:6",
												"trueBody": {
													"id": 1160,
													"nodeType": "Block",
													"src": "10634:763:6",
													"statements": [
														{
															"assignments": [
																1099
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1099,
																	"mutability": "mutable",
																	"name": "lastFacetAddressPosition",
																	"nodeType": "VariableDeclaration",
																	"scope": 1160,
																	"src": "10739:32:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1098,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10739:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1105,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1100,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "10774:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 280,
																		"src": "10774:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "10774:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10801:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10774:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10739:63:6"
														},
														{
															"assignments": [
																1107
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1107,
																	"mutability": "mutable",
																	"name": "facetAddressPosition",
																	"nodeType": "VariableDeclaration",
																	"scope": 1160,
																	"src": "10816:28:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1106,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10816:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1113,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1108,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "10847:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetFunctionSelectors",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 277,
																		"src": "10847:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																			"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																		}
																	},
																	"id": 1111,
																	"indexExpression": {
																		"id": 1110,
																		"name": "_facetAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "10873:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10847:40:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																		"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																	}
																},
																"id": 1112,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "facetAddressPosition",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 266,
																"src": "10847:61:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10816:92:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1114,
																	"name": "facetAddressPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "10926:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1115,
																	"name": "lastFacetAddressPosition",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1099,
																	"src": "10950:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10926:48:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1145,
															"nodeType": "IfStatement",
															"src": "10922:346:6",
															"trueBody": {
																"id": 1144,
																"nodeType": "Block",
																"src": "10976:292:6",
																"statements": [
																	{
																		"assignments": [
																			1118
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1118,
																				"mutability": "mutable",
																				"name": "lastFacetAddress",
																				"nodeType": "VariableDeclaration",
																				"scope": 1144,
																				"src": "10994:24:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1117,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "10994:7:6",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1123,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1119,
																					"name": "ds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 999,
																					"src": "11021:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																						"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																					}
																				},
																				"id": 1120,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "facetAddresses",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 280,
																				"src": "11021:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1122,
																			"indexExpression": {
																				"id": 1121,
																				"name": "lastFacetAddressPosition",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1099,
																				"src": "11039:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11021:43:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10994:70:6"
																	},
																	{
																		"expression": {
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1124,
																						"name": "ds",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 999,
																						"src": "11082:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																							"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																						}
																					},
																					"id": 1127,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "facetAddresses",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 280,
																					"src": "11082:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 1128,
																				"indexExpression": {
																					"id": 1126,
																					"name": "facetAddressPosition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1107,
																					"src": "11100:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "11082:39:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1129,
																				"name": "lastFacetAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1118,
																				"src": "11124:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "11082:58:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1131,
																		"nodeType": "ExpressionStatement",
																		"src": "11082:58:6"
																	},
																	{
																		"expression": {
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1132,
																							"name": "ds",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 999,
																							"src": "11158:2:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																								"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																							}
																						},
																						"id": 1135,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "facetFunctionSelectors",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 277,
																						"src": "11158:25:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																							"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																						}
																					},
																					"id": 1136,
																					"indexExpression": {
																						"id": 1134,
																						"name": "lastFacetAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1118,
																						"src": "11184:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11158:43:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																						"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																					}
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "facetAddressPosition",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 266,
																				"src": "11158:64:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1140,
																						"name": "facetAddressPosition",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1107,
																						"src": "11232:20:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1139,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11225:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint16_$",
																						"typeString": "type(uint16)"
																					},
																					"typeName": {
																						"id": 1138,
																						"name": "uint16",
																						"nodeType": "ElementaryTypeName",
																						"src": "11225:6:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11225:28:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "11158:95:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"id": 1143,
																		"nodeType": "ExpressionStatement",
																		"src": "11158:95:6"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1146,
																			"name": "ds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "11281:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																				"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "facetAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 280,
																		"src": "11281:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "11281:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11281:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1152,
															"nodeType": "ExpressionStatement",
															"src": "11281:23:6"
														},
														{
															"expression": {
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "11318:68:6",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1153,
																				"name": "ds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 999,
																				"src": "11325:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_DiamondStorage_$287_storage_ptr",
																					"typeString": "struct LibDiamond.DiamondStorage storage pointer"
																				}
																			},
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "facetFunctionSelectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 277,
																			"src": "11325:25:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$267_storage_$",
																				"typeString": "mapping(address => struct LibDiamond.FacetFunctionSelectors storage ref)"
																			}
																		},
																		"id": 1156,
																		"indexExpression": {
																			"id": 1155,
																			"name": "_facetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 992,
																			"src": "11351:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11325:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetFunctionSelectors_$267_storage",
																			"typeString": "struct LibDiamond.FacetFunctionSelectors storage ref"
																		}
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "facetAddressPosition",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 266,
																	"src": "11325:61:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1159,
															"nodeType": "ExpressionStatement",
															"src": "11318:68:6"
														}
													]
												}
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeFunction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "_facetAddress",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "9210:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9210:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "_selector",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "9233:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 993,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "9233:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9209:41:6"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9260:0:6"
									},
									"scope": 1261,
									"src": "9186:2217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "11487:801:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1170,
														"name": "_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "11501:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11518:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11510:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1171,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11510:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11510:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11501:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1238,
													"nodeType": "Block",
													"src": "11647:635:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1186,
																				"name": "_calldata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1167,
																				"src": "11669:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "11669:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11688:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11669:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d70747920627574205f696e6974206973206e6f742061646472657373283029",
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11691:63:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042",
																			"typeString": "literal_string \"LibDiamondCut: _calldata is empty but _init is not address(0)\""
																		},
																		"value": "LibDiamondCut: _calldata is empty but _init is not address(0)"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_868d165ec2461661b624442252aed6a645399bfae7b60083a77ea1b61b084042",
																			"typeString": "literal_string \"LibDiamondCut: _calldata is empty but _init is not address(0)\""
																		}
																	],
																	"id": 1185,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11661:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11661:94:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1192,
															"nodeType": "ExpressionStatement",
															"src": "11661:94:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1193,
																	"name": "_init",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "11773:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1196,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "11790:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_LibDiamond_$1261",
																				"typeString": "library LibDiamond"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_LibDiamond_$1261",
																				"typeString": "library LibDiamond"
																			}
																		],
																		"id": 1195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11782:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1194,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11782:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11782:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11773:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1205,
															"nodeType": "IfStatement",
															"src": "11769:134:6",
															"trueBody": {
																"id": 1204,
																"nodeType": "Block",
																"src": "11797:106:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1200,
																					"name": "_init",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "11838:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f6465",
																					"id": 1201,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11845:42:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_460f8f0920c649146ef02741816b1cf9ce4f02ea288ceb73adf027cefe9069a0",
																						"typeString": "literal_string \"LibDiamondCut: _init address has no code\""
																					},
																					"value": "LibDiamondCut: _init address has no code"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_460f8f0920c649146ef02741816b1cf9ce4f02ea288ceb73adf027cefe9069a0",
																						"typeString": "literal_string \"LibDiamondCut: _init address has no code\""
																					}
																				],
																				"id": 1199,
																				"name": "enforceHasContractCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1260,
																				"src": "11815:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (address,string memory) view"
																				}
																			},
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11815:73:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1203,
																		"nodeType": "ExpressionStatement",
																		"src": "11815:73:6"
																	}
																]
															}
														},
														{
															"assignments": [
																1207,
																1209
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1207,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 1238,
																	"src": "11917:12:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1206,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "11917:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1209,
																	"mutability": "mutable",
																	"name": "error",
																	"nodeType": "VariableDeclaration",
																	"scope": 1238,
																	"src": "11931:18:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11931:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1214,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1212,
																		"name": "_calldata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "11972:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1210,
																		"name": "_init",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "11953:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "11953:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11953:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11916:66:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1215,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "12000:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12011:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "12000:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1237,
															"nodeType": "IfStatement",
															"src": "11996:276:6",
															"trueBody": {
																"id": 1236,
																"nodeType": "Block",
																"src": "12018:254:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1218,
																					"name": "error",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "12040:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "12040:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12055:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "12040:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1234,
																			"nodeType": "Block",
																			"src": "12169:89:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"hexValue": "4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e207265766572746564",
																								"id": 1231,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "string",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "12198:40:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d",
																									"typeString": "literal_string \"LibDiamondCut: _init function reverted\""
																								},
																								"value": "LibDiamondCut: _init function reverted"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_stringliteral_080b2fe78815767d522290509c8fce2af708c8a54455ca1b0cc978c92822465d",
																									"typeString": "literal_string \"LibDiamondCut: _init function reverted\""
																								}
																							],
																							"id": 1230,
																							"name": "revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967277,
																								4294967277
																							],
																							"referencedDeclaration": 4294967277,
																							"src": "12191:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (string memory) pure"
																							}
																						},
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12191:48:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1233,
																					"nodeType": "ExpressionStatement",
																					"src": "12191:48:6"
																				}
																			]
																		},
																		"id": 1235,
																		"nodeType": "IfStatement",
																		"src": "12036:222:6",
																		"trueBody": {
																			"id": 1229,
																			"nodeType": "Block",
																			"src": "12058:105:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 1225,
																										"name": "error",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1209,
																										"src": "12137:5:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes_memory_ptr",
																											"typeString": "bytes memory"
																										}
																									],
																									"id": 1224,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "12130:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																										"typeString": "type(string storage pointer)"
																									},
																									"typeName": {
																										"id": 1223,
																										"name": "string",
																										"nodeType": "ElementaryTypeName",
																										"src": "12130:6:6",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1226,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12130:13:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_string_memory_ptr",
																									"typeString": "string memory"
																								}
																							],
																							"id": 1222,
																							"name": "revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [
																								4294967277,
																								4294967277
																							],
																							"referencedDeclaration": 4294967277,
																							"src": "12123:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																								"typeString": "function (string memory) pure"
																							}
																						},
																						"id": 1227,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "12123:21:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1228,
																					"nodeType": "ExpressionStatement",
																					"src": "12123:21:6"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"id": 1239,
												"nodeType": "IfStatement",
												"src": "11497:785:6",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "11522:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1177,
																				"name": "_calldata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1167,
																				"src": "11544:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "11544:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11564:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11544:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4c69624469616d6f6e644375743a205f696e69742069732061646472657373283029206275745f63616c6c64617461206973206e6f7420656d707479",
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11567:62:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8",
																			"typeString": "literal_string \"LibDiamondCut: _init is address(0) but_calldata is not empty\""
																		},
																		"value": "LibDiamondCut: _init is address(0) but_calldata is not empty"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_046c761a688d1dc3c500562bc5aaa3544f01f394f9bb3b69aa2a950a45afb1f8",
																			"typeString": "literal_string \"LibDiamondCut: _init is address(0) but_calldata is not empty\""
																		}
																	],
																	"id": 1176,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11536:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11536:94:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1183,
															"nodeType": "ExpressionStatement",
															"src": "11536:94:6"
														}
													]
												}
											}
										]
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initializeDiamondCut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "_init",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "11439:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11439:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "_calldata",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "11454:22:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11454:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11438:39:6"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11487:0:6"
									},
									"scope": 1261,
									"src": "11409:879:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "12388:168:6",
										"statements": [
											{
												"assignments": [
													1249
												],
												"declarations": [
													{
														"constant": false,
														"id": 1249,
														"mutability": "mutable",
														"name": "contractSize",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "12398:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1248,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12398:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1250,
												"nodeType": "VariableDeclarationStatement",
												"src": "12398:20:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "12437:62:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12451:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "_contract",
																		"nodeType": "YulIdentifier",
																		"src": "12479:9:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "12467:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12467:22:6"
															},
															"variableNames": [
																{
																	"name": "contractSize",
																	"nodeType": "YulIdentifier",
																	"src": "12451:12:6"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1243,
														"isOffset": false,
														"isSlot": false,
														"src": "12479:9:6",
														"valueSize": 1
													},
													{
														"declaration": 1249,
														"isOffset": false,
														"isSlot": false,
														"src": "12451:12:6",
														"valueSize": 1
													}
												],
												"id": 1251,
												"nodeType": "InlineAssembly",
												"src": "12428:71:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1253,
																"name": "contractSize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "12516:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12532:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12516:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1256,
															"name": "_errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "12535:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12508:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12508:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "12508:41:6"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enforceHasContractCode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "_contract",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "12326:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "_errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "12345:27:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12345:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12325:48:6"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12388:0:6"
									},
									"scope": 1261,
									"src": "12294:262:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1262,
							"src": "633:11925:6"
						}
					],
					"src": "32:12526:6"
				},
				"id": 6
			},
			"shared/libs/LibMeta.sol": {
				"ast": {
					"absolutePath": "shared/libs/LibMeta.sol",
					"exportedSymbols": {
						"LibMeta": [
							1349
						]
					},
					"id": 1350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1263,
							"literals": [
								"solidity",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1349,
							"linearizedBaseContracts": [
								1349
							],
							"name": "LibMeta",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1271,
									"mutability": "constant",
									"name": "EIP712_DOMAIN_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "78:158:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1264,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "78:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e743235362073616c742c6164647265737320766572696679696e67436f6e747261637429",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "153:81:7",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_e7918613ab6ca2ac023497993e50695b315c7f906d9c00cbc9dc3e41394a6f65",
															"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 salt,address verifyingContract)\""
														},
														"value": "EIP712Domain(string name,string version,uint256 salt,address verifyingContract)"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_e7918613ab6ca2ac023497993e50695b315c7f906d9c00cbc9dc3e41394a6f65",
															"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 salt,address verifyingContract)\""
														}
													],
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "147:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
														"typeString": "type(bytes storage pointer)"
													},
													"typeName": {
														"id": 1266,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "147:5:7",
														"typeDescriptions": {}
													}
												},
												"id": 1269,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "147:88:7",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes memory"
												}
											],
											"id": 1265,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "137:9:7",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1270,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "137:99:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "360:183:7",
										"statements": [
											{
												"expression": {
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1280,
														"name": "domainSeparator_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "370:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1284,
																		"name": "EIP712_DOMAIN_TYPEHASH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1271,
																		"src": "423:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1288,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1273,
																						"src": "463:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1287,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "457:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1286,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "457:5:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "457:11:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1285,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "447:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "447:22:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1294,
																						"name": "version",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1275,
																						"src": "487:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "481:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1292,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "481:5:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1295,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "481:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1291,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "471:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "471:25:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1297,
																			"name": "getChainID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "498:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																				"typeString": "function () view returns (uint256)"
																			}
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "498:12:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1301,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "520:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_LibMeta_$1349",
																					"typeString": "library LibMeta"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_LibMeta_$1349",
																					"typeString": "library LibMeta"
																				}
																			],
																			"id": 1300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "512:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1299,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "512:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "512:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1282,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "412:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"src": "412:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "412:114:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1281,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "389:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "389:147:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "370:166:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "370:166:7"
											}
										]
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "domainSeparator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "268:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "268:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "version",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "288:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "288:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "267:43:7"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "domainSeparator_",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "334:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "334:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "333:26:7"
									},
									"scope": 1349,
									"src": "243:300:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "606:64:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "625:39:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "639:15:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "chainid",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:9:7"
															},
															"variableNames": [
																{
																	"name": "id",
																	"nodeType": "YulIdentifier",
																	"src": "639:2:7"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1311,
														"isOffset": false,
														"isSlot": false,
														"src": "639:2:7",
														"valueSize": 1
													}
												],
												"id": 1313,
												"nodeType": "InlineAssembly",
												"src": "616:48:7"
											}
										]
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainID",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:7"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "id",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "594:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:12:7"
									},
									"scope": 1349,
									"src": "549:121:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "737:447:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1320,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "751:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "751:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 1324,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "773:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_LibMeta_$1349",
																	"typeString": "library LibMeta"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_LibMeta_$1349",
																	"typeString": "library LibMeta"
																}
															],
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "765:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1322,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "765:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "765:13:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "751:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1345,
													"nodeType": "Block",
													"src": "1133:45:7",
													"statements": [
														{
															"expression": {
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1340,
																	"name": "sender_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "1147:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1341,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1157:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1157:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1147:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1344,
															"nodeType": "ExpressionStatement",
															"src": "1147:20:7"
														}
													]
												},
												"id": 1346,
												"nodeType": "IfStatement",
												"src": "747:431:7",
												"trueBody": {
													"id": 1339,
													"nodeType": "Block",
													"src": "780:347:7",
													"statements": [
														{
															"assignments": [
																1328
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1328,
																	"mutability": "mutable",
																	"name": "array",
																	"nodeType": "VariableDeclaration",
																	"scope": 1339,
																	"src": "794:18:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1327,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "794:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1331,
															"initialValue": {
																"expression": {
																	"id": 1329,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "815:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "815:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "794:29:7"
														},
														{
															"assignments": [
																1333
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1333,
																	"mutability": "mutable",
																	"name": "index",
																	"nodeType": "VariableDeclaration",
																	"scope": 1339,
																	"src": "837:13:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1332,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "837:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1337,
															"initialValue": {
																"expression": {
																	"expression": {
																		"id": 1334,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "853:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"src": "853:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "853:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "837:31:7"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "891:226:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1019:84:7",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "array",
																									"nodeType": "YulIdentifier",
																									"src": "1044:5:7"
																								},
																								{
																									"name": "index",
																									"nodeType": "YulIdentifier",
																									"src": "1051:5:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:17:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1034:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1034:24:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1060:42:7",
																					"type": "",
																					"value": "0xffffffffffffffffffffffffffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1030:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:73:7"
																		},
																		"variableNames": [
																			{
																				"name": "sender_",
																				"nodeType": "YulIdentifier",
																				"src": "1019:7:7"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1328,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1044:5:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1333,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1051:5:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1318,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1019:7:7",
																	"valueSize": 1
																}
															],
															"id": 1338,
															"nodeType": "InlineAssembly",
															"src": "882:235:7"
														}
													]
												}
											}
										]
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:2:7"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "sender_",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "720:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:17:7"
									},
									"scope": 1349,
									"src": "676:508:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1350,
							"src": "56:1130:7"
						}
					],
					"src": "32:1154:7"
				},
				"id": 7
			}
		}
	}
}