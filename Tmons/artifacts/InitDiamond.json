{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50610629806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80630edacbd314610030575b600080fd5b61004a6004803603810190610045919061047b565b61004c565b005b60006100566102c7565b905060018160030160007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f1f931c1c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f48e2b093000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f7f5828d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001516000800190805190602001906102a49291906102f4565b508160200151600060010190805190602001906102c29291906102f4565b505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b82805461030090610521565b90600052602060002090601f0160209004810192826103225760008555610369565b82601f1061033b57805160ff1916838001178555610369565b82800160010185558215610369579182015b8281111561036857825182559160200191906001019061034d565b5b509050610376919061037a565b5090565b5b8082111561039357600081600090555060010161037b565b5090565b60006103aa6103a5846104e1565b6104bc565b9050828152602081018484840111156103c257600080fd5b6103cd848285610512565b509392505050565b600082601f8301126103e657600080fd5b81356103f6848260208601610397565b91505092915050565b60006040828403121561041157600080fd5b61041b60406104bc565b9050600082013567ffffffffffffffff81111561043757600080fd5b610443848285016103d5565b600083015250602082013567ffffffffffffffff81111561046357600080fd5b61046f848285016103d5565b60208301525092915050565b60006020828403121561048d57600080fd5b600082013567ffffffffffffffff8111156104a757600080fd5b6104b3848285016103ff565b91505092915050565b60006104c66104d7565b90506104d28282610553565b919050565b6000604051905090565b600067ffffffffffffffff8211156104fc576104fb6105b3565b5b610505826105e2565b9050602081019050919050565b82818337600083830152505050565b6000600282049050600182168061053957607f821691505b6020821081141561054d5761054c610584565b5b50919050565b61055c826105e2565b810181811067ffffffffffffffff8211171561057b5761057a6105b3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220accaa162d03f5fd7106c56c2ae41db0376a01ee66ea18b78f1eef1ea708d426264736f6c63430008010033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x629 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEDACBD3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x56 PUSH2 0x2C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x1F931C1C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x48E2B09300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x7F5828D000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2C2 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0x521 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x322 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x369 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x33B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x369 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x369 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x368 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x34D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA PUSH2 0x3A5 DUP5 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CD DUP5 DUP3 DUP6 PUSH2 0x512 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x397 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41B PUSH1 0x40 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x443 DUP5 DUP3 DUP6 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46F DUP5 DUP3 DUP6 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D2 DUP3 DUP3 PUSH2 0x553 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x5B3 JUMP JUMPDEST JUMPDEST PUSH2 0x505 DUP3 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x539 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x584 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55C DUP3 PUSH2 0x5E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x5B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xCA LOG1 PUSH3 0xD03F5F 0xD7 LT PUSH13 0x56C2AE41DB0376A01EE66EA18B PUSH25 0xF1EEF1EA708D426264736F6C63430008010033000000000000 ",
			"sourceMap": "520:629:0:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:3579:8",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "91:261:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "101:75:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "168:6:8"
															}
														],
														"functionName": {
															"name": "array_allocation_size_t_string_memory_ptr",
															"nodeType": "YulIdentifier",
															"src": "126:41:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "126:49:8"
													}
												],
												"functionName": {
													"name": "allocate_memory",
													"nodeType": "YulIdentifier",
													"src": "110:15:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "110:66:8"
											},
											"variableNames": [
												{
													"name": "array",
													"nodeType": "YulIdentifier",
													"src": "101:5:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "array",
														"nodeType": "YulIdentifier",
														"src": "192:5:8"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "199:6:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "185:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "185:21:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "185:21:8"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "215:27:8",
											"value": {
												"arguments": [
													{
														"name": "array",
														"nodeType": "YulIdentifier",
														"src": "230:5:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "237:4:8",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "226:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "226:16:8"
											},
											"variables": [
												{
													"name": "dst",
													"nodeType": "YulTypedName",
													"src": "219:3:8",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "280:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "289:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "292:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "282:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "282:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "282:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "src",
																"nodeType": "YulIdentifier",
																"src": "261:3:8"
															},
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "266:6:8"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "257:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "257:16:8"
													},
													{
														"name": "end",
														"nodeType": "YulIdentifier",
														"src": "275:3:8"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "254:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "254:25:8"
											},
											"nodeType": "YulIf",
											"src": "251:2:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "src",
														"nodeType": "YulIdentifier",
														"src": "329:3:8"
													},
													{
														"name": "dst",
														"nodeType": "YulIdentifier",
														"src": "334:3:8"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "339:6:8"
													}
												],
												"functionName": {
													"name": "copy_calldata_to_memory",
													"nodeType": "YulIdentifier",
													"src": "305:23:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "305:41:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "305:41:8"
										}
									]
								},
								"name": "abi_decode_available_length_t_string_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "src",
										"nodeType": "YulTypedName",
										"src": "64:3:8",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "69:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "77:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "array",
										"nodeType": "YulTypedName",
										"src": "85:5:8",
										"type": ""
									}
								],
								"src": "7:345:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "434:211:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "483:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "492:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "495:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "485:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "485:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "485:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "462:6:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "470:4:8",
																		"type": "",
																		"value": "0x1f"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:17:8"
															},
															{
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "477:3:8"
															}
														],
														"functionName": {
															"name": "slt",
															"nodeType": "YulIdentifier",
															"src": "454:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "454:27:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "447:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "447:35:8"
											},
											"nodeType": "YulIf",
											"src": "444:2:8"
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "508:34:8",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "535:6:8"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "522:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "522:20:8"
											},
											"variables": [
												{
													"name": "length",
													"nodeType": "YulTypedName",
													"src": "512:6:8",
													"type": ""
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "551:88:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "612:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "620:4:8",
																"type": "",
																"value": "0x20"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "608:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "608:17:8"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "627:6:8"
													},
													{
														"name": "end",
														"nodeType": "YulIdentifier",
														"src": "635:3:8"
													}
												],
												"functionName": {
													"name": "abi_decode_available_length_t_string_memory_ptr",
													"nodeType": "YulIdentifier",
													"src": "560:47:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "560:79:8"
											},
											"variableNames": [
												{
													"name": "array",
													"nodeType": "YulIdentifier",
													"src": "551:5:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_t_string_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "412:6:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "420:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "array",
										"nodeType": "YulTypedName",
										"src": "428:5:8",
										"type": ""
									}
								],
								"src": "372:273:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "757:635:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "801:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "810:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "813:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "803:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "803:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "803:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "778:3:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "783:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "774:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "774:19:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "795:4:8",
														"type": "",
														"value": "0x40"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "770:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "770:30:8"
											},
											"nodeType": "YulIf",
											"src": "767:2:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "826:30:8",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "851:4:8",
														"type": "",
														"value": "0x40"
													}
												],
												"functionName": {
													"name": "allocate_memory",
													"nodeType": "YulIdentifier",
													"src": "835:15:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "835:21:8"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "826:5:8"
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "866:253:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "901:45:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "943:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "928:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:17:8"
															}
														],
														"functionName": {
															"name": "calldataload",
															"nodeType": "YulIdentifier",
															"src": "915:12:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "915:31:8"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "905:6:8",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "993:16:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1002:1:8",
																			"type": "",
																			"value": "0"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1005:1:8",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "revert",
																		"nodeType": "YulIdentifier",
																		"src": "995:6:8"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "995:12:8"
																},
																"nodeType": "YulExpressionStatement",
																"src": "995:12:8"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "965:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "973:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
															"src": "962:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "962:30:8"
													},
													"nodeType": "YulIf",
													"src": "959:2:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1034:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:4:8",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1030:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:16:8"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1083:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1094:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1079:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1079:22:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1103:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1048:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1048:59:8"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "1023:6:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1023:85:8"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1023:85:8"
												}
											]
										},
										{
											"nodeType": "YulBlock",
											"src": "1129:256:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1166:46:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1197:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1208:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1193:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:18:8"
															}
														],
														"functionName": {
															"name": "calldataload",
															"nodeType": "YulIdentifier",
															"src": "1180:12:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1180:32:8"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1170:6:8",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "1259:16:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1268:1:8",
																			"type": "",
																			"value": "0"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1271:1:8",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "revert",
																		"nodeType": "YulIdentifier",
																		"src": "1261:6:8"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1261:12:8"
																},
																"nodeType": "YulExpressionStatement",
																"src": "1261:12:8"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1231:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1239:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
															"src": "1228:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1228:30:8"
													},
													"nodeType": "YulIf",
													"src": "1225:2:8"
												},
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1300:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1307:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1296:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:16:8"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1349:9:8"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1360:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1345:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1345:22:8"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1369:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1314:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1314:59:8"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "1289:6:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1289:85:8"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1289:85:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_t_struct$_Args_$23_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "732:9:8",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "743:3:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "751:5:8",
										"type": ""
									}
								],
								"src": "682:710:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1484:309:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1530:16:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1539:1:8",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "1542:1:8",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "1532:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "1532:12:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1532:12:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1505:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1514:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1501:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1501:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1526:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1497:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1497:32:8"
											},
											"nodeType": "YulIf",
											"src": "1494:2:8"
										},
										{
											"nodeType": "YulBlock",
											"src": "1556:230:8",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1571:45:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1613:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:17:8"
															}
														],
														"functionName": {
															"name": "calldataload",
															"nodeType": "YulIdentifier",
															"src": "1585:12:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1585:31:8"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1575:6:8",
															"type": ""
														}
													]
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "1663:16:8",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1672:1:8",
																			"type": "",
																			"value": "0"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1675:1:8",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "revert",
																		"nodeType": "YulIdentifier",
																		"src": "1665:6:8"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "1665:12:8"
																},
																"nodeType": "YulExpressionStatement",
																"src": "1665:12:8"
															}
														]
													},
													"condition": {
														"arguments": [
															{
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1635:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1643:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
															"src": "1632:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1632:30:8"
													},
													"nodeType": "YulIf",
													"src": "1629:2:8"
												},
												{
													"nodeType": "YulAssignment",
													"src": "1693:83:8",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1748:9:8"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1759:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:22:8"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1768:7:8"
															}
														],
														"functionName": {
															"name": "abi_decode_t_struct$_Args_$23_memory_ptr",
															"nodeType": "YulIdentifier",
															"src": "1703:40:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "1703:73:8"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1693:6:8"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_struct$_Args_$23_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1454:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1465:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1477:6:8",
										"type": ""
									}
								],
								"src": "1398:395:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1840:88:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1850:30:8",
											"value": {
												"arguments": [],
												"functionName": {
													"name": "allocate_unbounded",
													"nodeType": "YulIdentifier",
													"src": "1860:18:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1860:20:8"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "1850:6:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "1909:6:8"
													},
													{
														"name": "size",
														"nodeType": "YulIdentifier",
														"src": "1917:4:8"
													}
												],
												"functionName": {
													"name": "finalize_allocation",
													"nodeType": "YulIdentifier",
													"src": "1889:19:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1889:33:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1889:33:8"
										}
									]
								},
								"name": "allocate_memory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "size",
										"nodeType": "YulTypedName",
										"src": "1824:4:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "1833:6:8",
										"type": ""
									}
								],
								"src": "1799:129:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1974:35:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1984:19:8",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2000:2:8",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "1994:5:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "1994:9:8"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "1984:6:8"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "1967:6:8",
										"type": ""
									}
								],
								"src": "1934:75:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2082:241:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2187:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x41",
																"nodeType": "YulIdentifier",
																"src": "2189:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "2189:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2189:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2159:6:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2167:18:8",
														"type": "",
														"value": "0xffffffffffffffff"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "2156:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2156:30:8"
											},
											"nodeType": "YulIf",
											"src": "2153:2:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "2219:37:8",
											"value": {
												"arguments": [
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2249:6:8"
													}
												],
												"functionName": {
													"name": "round_up_to_mul_of_32",
													"nodeType": "YulIdentifier",
													"src": "2227:21:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2227:29:8"
											},
											"variableNames": [
												{
													"name": "size",
													"nodeType": "YulIdentifier",
													"src": "2219:4:8"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "2293:23:8",
											"value": {
												"arguments": [
													{
														"name": "size",
														"nodeType": "YulIdentifier",
														"src": "2305:4:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2311:4:8",
														"type": "",
														"value": "0x20"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2301:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2301:15:8"
											},
											"variableNames": [
												{
													"name": "size",
													"nodeType": "YulIdentifier",
													"src": "2293:4:8"
												}
											]
										}
									]
								},
								"name": "array_allocation_size_t_string_memory_ptr",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "2066:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "size",
										"nodeType": "YulTypedName",
										"src": "2077:4:8",
										"type": ""
									}
								],
								"src": "2015:308:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2380:103:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "dst",
														"nodeType": "YulIdentifier",
														"src": "2403:3:8"
													},
													{
														"name": "src",
														"nodeType": "YulIdentifier",
														"src": "2408:3:8"
													},
													{
														"name": "length",
														"nodeType": "YulIdentifier",
														"src": "2413:6:8"
													}
												],
												"functionName": {
													"name": "calldatacopy",
													"nodeType": "YulIdentifier",
													"src": "2390:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2390:30:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2390:30:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "2461:3:8"
															},
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2466:6:8"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "2457:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2457:16:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2475:1:8",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "2450:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2450:27:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2450:27:8"
										}
									]
								},
								"name": "copy_calldata_to_memory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "src",
										"nodeType": "YulTypedName",
										"src": "2362:3:8",
										"type": ""
									},
									{
										"name": "dst",
										"nodeType": "YulTypedName",
										"src": "2367:3:8",
										"type": ""
									},
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "2372:6:8",
										"type": ""
									}
								],
								"src": "2329:154:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2540:269:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2550:22:8",
											"value": {
												"arguments": [
													{
														"name": "data",
														"nodeType": "YulIdentifier",
														"src": "2564:4:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2570:1:8",
														"type": "",
														"value": "2"
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
													"src": "2560:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2560:12:8"
											},
											"variableNames": [
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "2550:6:8"
												}
											]
										},
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2581:38:8",
											"value": {
												"arguments": [
													{
														"name": "data",
														"nodeType": "YulIdentifier",
														"src": "2611:4:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2617:1:8",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "2607:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2607:12:8"
											},
											"variables": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulTypedName",
													"src": "2585:18:8",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2658:51:8",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "2672:27:8",
														"value": {
															"arguments": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2686:6:8"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2694:4:8",
																	"type": "",
																	"value": "0x7f"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "2682:3:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "2682:17:8"
														},
														"variableNames": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2672:6:8"
															}
														]
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "outOfPlaceEncoding",
														"nodeType": "YulIdentifier",
														"src": "2638:18:8"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2631:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2631:26:8"
											},
											"nodeType": "YulIf",
											"src": "2628:2:8"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2761:42:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x22",
																"nodeType": "YulIdentifier",
																"src": "2775:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "2775:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2775:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "outOfPlaceEncoding",
														"nodeType": "YulIdentifier",
														"src": "2725:18:8"
													},
													{
														"arguments": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2748:6:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2756:2:8",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "lt",
															"nodeType": "YulIdentifier",
															"src": "2745:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2745:14:8"
													}
												],
												"functionName": {
													"name": "eq",
													"nodeType": "YulIdentifier",
													"src": "2722:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2722:38:8"
											},
											"nodeType": "YulIf",
											"src": "2719:2:8"
										}
									]
								},
								"name": "extract_byte_array_length",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "data",
										"nodeType": "YulTypedName",
										"src": "2524:4:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "length",
										"nodeType": "YulTypedName",
										"src": "2533:6:8",
										"type": ""
									}
								],
								"src": "2489:320:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2858:238:8",
									"statements": [
										{
											"nodeType": "YulVariableDeclaration",
											"src": "2868:58:8",
											"value": {
												"arguments": [
													{
														"name": "memPtr",
														"nodeType": "YulIdentifier",
														"src": "2890:6:8"
													},
													{
														"arguments": [
															{
																"name": "size",
																"nodeType": "YulIdentifier",
																"src": "2920:4:8"
															}
														],
														"functionName": {
															"name": "round_up_to_mul_of_32",
															"nodeType": "YulIdentifier",
															"src": "2898:21:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2898:27:8"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "2886:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2886:40:8"
											},
											"variables": [
												{
													"name": "newFreePtr",
													"nodeType": "YulTypedName",
													"src": "2872:10:8",
													"type": ""
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3037:22:8",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x41",
																"nodeType": "YulIdentifier",
																"src": "3039:16:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "3039:18:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3039:18:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "newFreePtr",
																"nodeType": "YulIdentifier",
																"src": "2980:10:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2992:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
															"src": "2977:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "2977:34:8"
													},
													{
														"arguments": [
															{
																"name": "newFreePtr",
																"nodeType": "YulIdentifier",
																"src": "3016:10:8"
															},
															{
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3028:6:8"
															}
														],
														"functionName": {
															"name": "lt",
															"nodeType": "YulIdentifier",
															"src": "3013:2:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3013:22:8"
													}
												],
												"functionName": {
													"name": "or",
													"nodeType": "YulIdentifier",
													"src": "2974:2:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "2974:62:8"
											},
											"nodeType": "YulIf",
											"src": "2971:2:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3075:2:8",
														"type": "",
														"value": "64"
													},
													{
														"name": "newFreePtr",
														"nodeType": "YulIdentifier",
														"src": "3079:10:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3068:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3068:22:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3068:22:8"
										}
									]
								},
								"name": "finalize_allocation",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "2844:6:8",
										"type": ""
									},
									{
										"name": "size",
										"nodeType": "YulTypedName",
										"src": "2852:4:8",
										"type": ""
									}
								],
								"src": "2815:281:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3130:152:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3147:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3150:77:8",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3140:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3140:88:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3140:88:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3244:1:8",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3247:4:8",
														"type": "",
														"value": "0x22"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3237:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3237:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3237:15:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3268:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3271:4:8",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "3261:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3261:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3261:15:8"
										}
									]
								},
								"name": "panic_error_0x22",
								"nodeType": "YulFunctionDefinition",
								"src": "3102:180:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3316:152:8",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3333:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3336:77:8",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3326:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3326:88:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3326:88:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3430:1:8",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3433:4:8",
														"type": "",
														"value": "0x41"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3423:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3423:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3423:15:8"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3454:1:8",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3457:4:8",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "3447:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3447:15:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3447:15:8"
										}
									]
								},
								"name": "panic_error_0x41",
								"nodeType": "YulFunctionDefinition",
								"src": "3288:180:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3522:54:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3532:38:8",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3550:5:8"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3557:2:8",
																"type": "",
																"value": "31"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3546:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3546:14:8"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3566:2:8",
																"type": "",
																"value": "31"
															}
														],
														"functionName": {
															"name": "not",
															"nodeType": "YulIdentifier",
															"src": "3562:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "3562:7:8"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "3542:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "3542:28:8"
											},
											"variableNames": [
												{
													"name": "result",
													"nodeType": "YulIdentifier",
													"src": "3532:6:8"
												}
											]
										}
									]
								},
								"name": "round_up_to_mul_of_32",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3505:5:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "result",
										"nodeType": "YulTypedName",
										"src": "3515:6:8",
										"type": ""
									}
								],
								"src": "3474:102:8"
							}
						]
					},
					"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct InitDiamond.Args\n    function abi_decode_t_struct$_Args_$23_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert(0, 0) }\n        value := allocate_memory(0x40)\n\n        {\n            // name\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x00), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // symbol\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            mstore(add(value, 0x20), abi_decode_t_string_memory_ptr(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Args_$23_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_struct$_Args_$23_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80630edacbd314610030575b600080fd5b61004a6004803603810190610045919061047b565b61004c565b005b60006100566102c7565b905060018160030160007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f1f931c1c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f48e2b093000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060018160030160007f7f5828d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555081600001516000800190805190602001906102a49291906102f4565b508160200151600060010190805190602001906102c29291906102f4565b505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b82805461030090610521565b90600052602060002090601f0160209004810192826103225760008555610369565b82601f1061033b57805160ff1916838001178555610369565b82800160010185558215610369579182015b8281111561036857825182559160200191906001019061034d565b5b509050610376919061037a565b5090565b5b8082111561039357600081600090555060010161037b565b5090565b60006103aa6103a5846104e1565b6104bc565b9050828152602081018484840111156103c257600080fd5b6103cd848285610512565b509392505050565b600082601f8301126103e657600080fd5b81356103f6848260208601610397565b91505092915050565b60006040828403121561041157600080fd5b61041b60406104bc565b9050600082013567ffffffffffffffff81111561043757600080fd5b610443848285016103d5565b600083015250602082013567ffffffffffffffff81111561046357600080fd5b61046f848285016103d5565b60208301525092915050565b60006020828403121561048d57600080fd5b600082013567ffffffffffffffff8111156104a757600080fd5b6104b3848285016103ff565b91505092915050565b60006104c66104d7565b90506104d28282610553565b919050565b6000604051905090565b600067ffffffffffffffff8211156104fc576104fb6105b3565b5b610505826105e2565b9050602081019050919050565b82818337600083830152505050565b6000600282049050600182168061053957607f821691505b6020821081141561054d5761054c610584565b5b50919050565b61055c826105e2565b810181811067ffffffffffffffff8211171561057b5761057a6105b3565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220accaa162d03f5fd7106c56c2ae41db0376a01ee66ea18b78f1eef1ea708d426264736f6c63430008010033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEDACBD3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x47B JUMP JUMPDEST PUSH2 0x4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x56 PUSH2 0x2C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x1F931C1C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x48E2B09300000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH32 0x7F5828D000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x0 DUP1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2A4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x0 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2C2 SWAP3 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x300 SWAP1 PUSH2 0x521 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x322 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x369 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x33B JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x369 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x369 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x368 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x34D JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x37A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x37B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AA PUSH2 0x3A5 DUP5 PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3CD DUP5 DUP3 DUP6 PUSH2 0x512 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3F6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x397 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x41B PUSH1 0x40 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x443 DUP5 DUP3 DUP6 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46F DUP5 DUP3 DUP6 ADD PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x3FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 PUSH2 0x4D7 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D2 DUP3 DUP3 PUSH2 0x553 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FB PUSH2 0x5B3 JUMP JUMPDEST JUMPDEST PUSH2 0x505 DUP3 PUSH2 0x5E2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x539 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x54D JUMPI PUSH2 0x54C PUSH2 0x584 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55C DUP3 PUSH2 0x5E2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x5B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xCA LOG1 PUSH3 0xD03F5F 0xD7 LT PUSH13 0x56C2AE41DB0376A01EE66EA18B PUSH25 0xF1EEF1EA708D426264736F6C63430008010033000000000000 ",
			"sourceMap": "520:629:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:502;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;698:36;737:27;:25;:27::i;:::-;698:66;;857:4;805:2;:22;;:49;828:25;805:49;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;927:4;871:2;:22;;:53;894:29;871:53;;;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;999:4;941:2;:22;;:55;964:31;941:55;;;;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;1065:4;1013:2;:22;;:49;1036:25;1013:49;;;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;1097:5;:10;;;1088:1;:6;;:19;;;;;;;;;;;;:::i;:::-;;1128:5;:12;;;1117:1;:8;;:23;;;;;;;;;;;;:::i;:::-;;645:502;;:::o;1767:197:6:-;1816:25;1853:16;702:45;1853:43;;1940:8;1929:19;;1915:43;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:345:8:-;;110:66;126:49;168:6;126:49;:::i;:::-;110:66;:::i;:::-;101:75;;199:6;192:5;185:21;237:4;230:5;226:16;275:3;266:6;261:3;257:16;254:25;251:2;;;292:1;289;282:12;251:2;305:41;339:6;334:3;329;305:41;:::i;:::-;91:261;;;;;;:::o;372:273::-;;477:3;470:4;462:6;458:17;454:27;444:2;;495:1;492;485:12;444:2;535:6;522:20;560:79;635:3;627:6;620:4;612:6;608:17;560:79;:::i;:::-;551:88;;434:211;;;;;:::o;682:710::-;;795:4;783:9;778:3;774:19;770:30;767:2;;;813:1;810;803:12;767:2;835:21;851:4;835:21;:::i;:::-;826:30;;943:1;932:9;928:17;915:31;973:18;965:6;962:30;959:2;;;1005:1;1002;995:12;959:2;1048:59;1103:3;1094:6;1083:9;1079:22;1048:59;:::i;:::-;1041:4;1034:5;1030:16;1023:85;866:253;1208:2;1197:9;1193:18;1180:32;1239:18;1231:6;1228:30;1225:2;;;1271:1;1268;1261:12;1225:2;1314:59;1369:3;1360:6;1349:9;1345:22;1314:59;:::i;:::-;1307:4;1300:5;1296:16;1289:85;1129:256;757:635;;;;:::o;1398:395::-;;1526:2;1514:9;1505:7;1501:23;1497:32;1494:2;;;1542:1;1539;1532:12;1494:2;1613:1;1602:9;1598:17;1585:31;1643:18;1635:6;1632:30;1629:2;;;1675:1;1672;1665:12;1629:2;1703:73;1768:7;1759:6;1748:9;1744:22;1703:73;:::i;:::-;1693:83;;1556:230;1484:309;;;;:::o;1799:129::-;;1860:20;;:::i;:::-;1850:30;;1889:33;1917:4;1909:6;1889:33;:::i;:::-;1840:88;;;:::o;1934:75::-;;2000:2;1994:9;1984:19;;1974:35;:::o;2015:308::-;;2167:18;2159:6;2156:30;2153:2;;;2189:18;;:::i;:::-;2153:2;2227:29;2249:6;2227:29;:::i;:::-;2219:37;;2311:4;2305;2301:15;2293:23;;2082:241;;;:::o;2329:154::-;2413:6;2408:3;2403;2390:30;2475:1;2466:6;2461:3;2457:16;2450:27;2380:103;;;:::o;2489:320::-;;2570:1;2564:4;2560:12;2550:22;;2617:1;2611:4;2607:12;2638:18;2628:2;;2694:4;2686:6;2682:17;2672:27;;2628:2;2756;2748:6;2745:14;2725:18;2722:38;2719:2;;;2775:18;;:::i;:::-;2719:2;2540:269;;;;:::o;2815:281::-;2898:27;2920:4;2898:27;:::i;:::-;2890:6;2886:40;3028:6;3016:10;3013:22;2992:18;2980:10;2977:34;2974:62;2971:2;;;3039:18;;:::i;:::-;2971:2;3079:10;3075:2;3068:22;2858:238;;;:::o;3102:180::-;3150:77;3147:1;3140:88;3247:4;3244:1;3237:15;3271:4;3268:1;3261:15;3288:180;3336:77;3333:1;3326:88;3433:4;3430:1;3423:15;3457:4;3454:1;3447:15;3474:102;;3566:2;3562:7;3557:2;3550:5;3546:14;3542:28;3532:38;;3522:54;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "315400",
				"executionCost": "355",
				"totalCost": "315755"
			},
			"external": {
				"init((string,string))": "infinite"
			}
		},
		"methodIdentifiers": {
			"init((string,string))": "0edacbd3"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "string",
							"name": "name",
							"type": "string"
						},
						{
							"internalType": "string",
							"name": "symbol",
							"type": "string"
						}
					],
					"internalType": "struct InitDiamond.Args",
					"name": "_args",
					"type": "tuple"
				}
			],
			"name": "init",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}