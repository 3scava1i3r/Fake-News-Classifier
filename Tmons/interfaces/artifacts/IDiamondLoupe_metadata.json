{
	"compiler": {
		"version": "0.8.1+commit.df193b15"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "_functionSelector",
						"type": "bytes4"
					}
				],
				"name": "facetAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "facetAddress_",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "facetAddresses",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "facetAddresses_",
						"type": "address[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_facet",
						"type": "address"
					}
				],
				"name": "facetFunctionSelectors",
				"outputs": [
					{
						"internalType": "bytes4[]",
						"name": "facetFunctionSelectors_",
						"type": "bytes4[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "facets",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "facetAddress",
								"type": "address"
							},
							{
								"internalType": "bytes4[]",
								"name": "functionSelectors",
								"type": "bytes4[]"
							}
						],
						"internalType": "struct IDiamondLoupe.Facet[]",
						"name": "facets_",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"facetAddress(bytes4)": {
					"details": "If facet is not found return address(0).",
					"params": {
						"_functionSelector": "The function selector."
					},
					"returns": {
						"facetAddress_": "The facet address."
					}
				},
				"facetAddresses()": {
					"returns": {
						"facetAddresses_": "facetAddresses_"
					}
				},
				"facetFunctionSelectors(address)": {
					"params": {
						"_facet": "The facet address."
					},
					"returns": {
						"facetFunctionSelectors_": "facetFunctionSelectors_"
					}
				},
				"facets()": {
					"returns": {
						"facets_": "Facet"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"facetAddress(bytes4)": {
					"notice": "Gets the facet that supports the given selector."
				},
				"facetAddresses()": {
					"notice": "Get all the facet addresses used by a diamond."
				},
				"facetFunctionSelectors(address)": {
					"notice": "Gets all the function selectors supported by a specific facet."
				},
				"facets()": {
					"notice": "Gets all facet addresses and their four byte function selectors."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Tmons/interfaces/IDiamondLoupe.sol": "IDiamondLoupe"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Tmons/interfaces/IDiamondLoupe.sol": {
			"keccak256": "0xbd6ed8e152b7bd811a46a8a5d198de96b1183bda3a25b310eac936446cf8ed59",
			"license": "MIT",
			"urls": [
				"bzz-raw://349fcce52a02e0e5261c23281a2ab1fdaa58b5fedd8134104cd2a8d670034721",
				"dweb:/ipfs/QmVHmyM8UBiozFLSQSRUX14ucAJT2NyDoRmF6WzfJ21jt6"
			]
		}
	},
	"version": 1
}